% $Revision: 1.1.4.4 $
%
% @file:      dwf.m
%
% Purpose:    MATLAB Class code for dwf API Projection Layer
%
% Authors:   Autogenerated by code in C:\work\Projector\apiprojector
%
% Generated: 21-Jan-2013 09:53:39
%
% Copyright 2010 - 2013 The MathWorks, Inc.
%
% $Date: 2013/02/01 08:14:59 $
%
%
classdef dwf < handle
    properties (Constant)
        % Standard Constants
        apiProjectorNotImplemented = -123456;

        % API Constants
       NULL =  int32(0);

        % Custom Constants
    end

    % Hidden, non-validating functions
    methods (Static, Hidden)

        function [status, pdwferc] = FDwfGetLastError_nv(pdwferc)
            [status, pdwferc]= mexdwf('FDwfGetLastError', pdwferc);
        end

        function [status, szError] = FDwfGetLastErrorMsg_nv(szError)
            [status, szError]= mexdwf('FDwfGetLastErrorMsg', szError);
        end

        function [status, szVersion] = FDwfGetVersion_nv(szVersion)
            [status, szVersion]= mexdwf('FDwfGetVersion', szVersion);
        end

        function [status, pcDeviceFound] = FDwfEnum_nv(enumfilter, pcDeviceFound)
            [status, pcDeviceFound]= mexdwf('FDwfEnum', enumfilter, pcDeviceFound);
        end

        function [status, pDeviceId, pDeviceRevision] = FDwfEnumDeviceType_nv(idxDevice, pDeviceId, pDeviceRevision)
            [status, pDeviceId, pDeviceRevision]= mexdwf('FDwfEnumDeviceType', idxDevice, pDeviceId, pDeviceRevision);
        end

        function [status, pfIsUsed] = FDwfEnumDeviceIsOpened_nv(idxDevice, pfIsUsed)
            [status, pfIsUsed]= mexdwf('FDwfEnumDeviceIsOpened', idxDevice, pfIsUsed);
        end

        function [status, szUserName] = FDwfEnumUserName_nv(idxDevice, szUserName)
            [status, szUserName]= mexdwf('FDwfEnumUserName', idxDevice, szUserName);
        end

        function [status, szDeviceName] = FDwfEnumDeviceName_nv(idxDevice, szDeviceName)
            [status, szDeviceName]= mexdwf('FDwfEnumDeviceName', idxDevice, szDeviceName);
        end

        function [status, szSN] = FDwfEnumSN_nv(idxDevice, szSN)
            [status, szSN]= mexdwf('FDwfEnumSN', idxDevice, szSN);
        end

        function [status, pnChannels] = FDwfEnumAnalogInChannels_nv(idxDevice, pnChannels)
            [status, pnChannels]= mexdwf('FDwfEnumAnalogInChannels', idxDevice, pnChannels);
        end

        function [status, pnBufferSize] = FDwfEnumAnalogInBufferSize_nv(idxDevice, pnBufferSize)
            [status, pnBufferSize]= mexdwf('FDwfEnumAnalogInBufferSize', idxDevice, pnBufferSize);
        end

        function [status, pnBits] = FDwfEnumAnalogInBits_nv(idxDevice, pnBits)
            [status, pnBits]= mexdwf('FDwfEnumAnalogInBits', idxDevice, pnBits);
        end

        function [status, phzFrequency] = FDwfEnumAnalogInFrequency_nv(idxDevice, phzFrequency)
            [status, phzFrequency]= mexdwf('FDwfEnumAnalogInFrequency', idxDevice, phzFrequency);
        end

        function [status, phdwf] = FDwfDeviceOpen_nv(idxDevice, phdwf)
            [status, phdwf]= mexdwf('FDwfDeviceOpen', idxDevice, phdwf);
        end

        function [status] = FDwfDeviceClose_nv(hdwf)
            [status]= mexdwf('FDwfDeviceClose', hdwf);
        end

        function [status] = FDwfDeviceCloseAll_nv()
            [status]= mexdwf('FDwfDeviceCloseAll');
        end

        function [status] = FDwfDeviceAutoConfigureSet_nv(hdwf, fConfigureWhenSet)
            [status]= mexdwf('FDwfDeviceAutoConfigureSet', hdwf, fConfigureWhenSet);
        end

        function [status, pfConfigureWhenSet] = FDwfDeviceAutoConfigureGet_nv(hdwf, pfConfigureWhenSet)
            [status, pfConfigureWhenSet]= mexdwf('FDwfDeviceAutoConfigureGet', hdwf, pfConfigureWhenSet);
        end

        function [status] = FDwfDeviceReset_nv(hdwf)
            [status]= mexdwf('FDwfDeviceReset', hdwf);
        end

        function [status] = FDwfDeviceTriggerPC_nv(hdwf)
            [status]= mexdwf('FDwfDeviceTriggerPC', hdwf);
        end

        function [status, phzMin, phzMax] = FDwfAnalogInFrequencyInfo_nv(hdwf, phzMin, phzMax)
            [status, phzMin, phzMax]= mexdwf('FDwfAnalogInFrequencyInfo', hdwf, phzMin, phzMax);
        end

        function [status] = FDwfAnalogInFrequencySet_nv(hdwf, hzFrequency)
            [status]= mexdwf('FDwfAnalogInFrequencySet', hdwf, hzFrequency);
        end

        function [status, phzFrequency] = FDwfAnalogInFrequencyGet_nv(hdwf, phzFrequency)
            [status, phzFrequency]= mexdwf('FDwfAnalogInFrequencyGet', hdwf, phzFrequency);
        end

        function [status, pnBits] = FDwfAnalogInBitsInfo_nv(hdwf, pnBits)
            [status, pnBits]= mexdwf('FDwfAnalogInBitsInfo', hdwf, pnBits);
        end

        function [status, pnSizeMin, pnSizeMax] = FDwfAnalogInBufferSizeInfo_nv(hdwf, pnSizeMin, pnSizeMax)
            [status, pnSizeMin, pnSizeMax]= mexdwf('FDwfAnalogInBufferSizeInfo', hdwf, pnSizeMin, pnSizeMax);
        end

        function [status] = FDwfAnalogInBufferSizeSet_nv(hdwf, nSize)
            [status]= mexdwf('FDwfAnalogInBufferSizeSet', hdwf, nSize);
        end

        function [status, pnSize] = FDwfAnalogInBufferSizeGet_nv(hdwf, pnSize)
            [status, pnSize]= mexdwf('FDwfAnalogInBufferSizeGet', hdwf, pnSize);
        end

        function [status, pfsacqmode] = FDwfAnalogInAcquisitionModeInfo_nv(hdwf, pfsacqmode)
            [status, pfsacqmode]= mexdwf('FDwfAnalogInAcquisitionModeInfo', hdwf, pfsacqmode);
        end

        function [status] = FDwfAnalogInAcquisitionModeSet_nv(hdwf, acqmode)
            [status]= mexdwf('FDwfAnalogInAcquisitionModeSet', hdwf, acqmode);
        end

        function [status, pacqmode] = FDwfAnalogInAcquisitionModeGet_nv(hdwf, pacqmode)
            [status, pacqmode]= mexdwf('FDwfAnalogInAcquisitionModeGet', hdwf, pacqmode);
        end

        function [status, pcChannel] = FDwfAnalogInChannelCount_nv(hdwf, pcChannel)
            [status, pcChannel]= mexdwf('FDwfAnalogInChannelCount', hdwf, pcChannel);
        end

        function [status] = FDwfAnalogInChannelEnableSet_nv(hdwf, idxChannel, fEnable)
            [status]= mexdwf('FDwfAnalogInChannelEnableSet', hdwf, idxChannel, fEnable);
        end

        function [status, pfEnable] = FDwfAnalogInChannelEnableGet_nv(hdwf, idxChannel, pfEnable)
            [status, pfEnable]= mexdwf('FDwfAnalogInChannelEnableGet', hdwf, idxChannel, pfEnable);
        end

        function [status, pfsfilter] = FDwfAnalogInChannelFilterInfo_nv(hdwf, pfsfilter)
            [status, pfsfilter]= mexdwf('FDwfAnalogInChannelFilterInfo', hdwf, pfsfilter);
        end

        function [status] = FDwfAnalogInChannelFilterSet_nv(hdwf, idxChannel, filter)
            [status]= mexdwf('FDwfAnalogInChannelFilterSet', hdwf, idxChannel, filter);
        end

        function [status, pfilter] = FDwfAnalogInChannelFilterGet_nv(hdwf, idxChannel, pfilter)
            [status, pfilter]= mexdwf('FDwfAnalogInChannelFilterGet', hdwf, idxChannel, pfilter);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInChannelRangeInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            [status, pvoltsMin, pvoltsMax, pnSteps]= mexdwf('FDwfAnalogInChannelRangeInfo', hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status, rgVoltsStep, pnSteps] = FDwfAnalogInChannelRangeSteps_nv(hdwf, rgVoltsStep, pnSteps)
            [status, rgVoltsStep, pnSteps]= mexdwf('FDwfAnalogInChannelRangeSteps', hdwf, rgVoltsStep, pnSteps);
        end

        function [status] = FDwfAnalogInChannelRangeSet_nv(hdwf, idxChannel, voltsRange)
            [status]= mexdwf('FDwfAnalogInChannelRangeSet', hdwf, idxChannel, voltsRange);
        end

        function [status, pvoltsRange] = FDwfAnalogInChannelRangeGet_nv(hdwf, idxChannel, pvoltsRange)
            [status, pvoltsRange]= mexdwf('FDwfAnalogInChannelRangeGet', hdwf, idxChannel, pvoltsRange);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInChannelOffsetInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            [status, pvoltsMin, pvoltsMax, pnSteps]= mexdwf('FDwfAnalogInChannelOffsetInfo', hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status] = FDwfAnalogInChannelOffsetSet_nv(hdwf, idxChannel, voltOffset)
            [status]= mexdwf('FDwfAnalogInChannelOffsetSet', hdwf, idxChannel, voltOffset);
        end

        function [status, pvoltOffset] = FDwfAnalogInChannelOffsetGet_nv(hdwf, idxChannel, pvoltOffset)
            [status, pvoltOffset]= mexdwf('FDwfAnalogInChannelOffsetGet', hdwf, idxChannel, pvoltOffset);
        end

        function [status] = FDwfAnalogInReset_nv(hdwf)
            [status]= mexdwf('FDwfAnalogInReset', hdwf);
        end

        function [status] = FDwfAnalogInConfigure_nv(hdwf, fReconfigure, fStart)
            [status]= mexdwf('FDwfAnalogInConfigure', hdwf, fReconfigure, fStart);
        end

        function [status, psts] = FDwfAnalogInStatus_nv(hdwf, fReadData, psts)
            [status, psts]= mexdwf('FDwfAnalogInStatus', hdwf, fReadData, psts);
        end

        function [status, pcSamplesLeft] = FDwfAnalogInStatusSamplesLeft_nv(hdwf, pcSamplesLeft)
            [status, pcSamplesLeft]= mexdwf('FDwfAnalogInStatusSamplesLeft', hdwf, pcSamplesLeft);
        end

        function [status, pcSamplesValid] = FDwfAnalogInStatusSamplesValid_nv(hdwf, pcSamplesValid)
            [status, pcSamplesValid]= mexdwf('FDwfAnalogInStatusSamplesValid', hdwf, pcSamplesValid);
        end

        function [status, pidxWrite] = FDwfAnalogInStatusIndexWrite_nv(hdwf, pidxWrite)
            [status, pidxWrite]= mexdwf('FDwfAnalogInStatusIndexWrite', hdwf, pidxWrite);
        end

        function [status, pfAuto] = FDwfAnalogInStatusAutoTriggered_nv(hdwf, pfAuto)
            [status, pfAuto]= mexdwf('FDwfAnalogInStatusAutoTriggered', hdwf, pfAuto);
        end

        function [status, rgdVoltData] = FDwfAnalogInStatusData_nv(hdwf, idxChannel, rgdVoltData, cdData)
            [status, rgdVoltData]= mexdwf('FDwfAnalogInStatusData', hdwf, idxChannel, rgdVoltData, cdData);
        end

        function [status, pdVoltSample] = FDwfAnalogInStatusSample_nv(hdwf, idxChannel, pdVoltSample)
            [status, pdVoltSample]= mexdwf('FDwfAnalogInStatusSample', hdwf, idxChannel, pdVoltSample);
        end

        function [status, pcdDataAvailable, pcdDataLost, pcdDataCorrupt] = FDwfAnalogInStatusRecord_nv(hdwf, pcdDataAvailable, pcdDataLost, pcdDataCorrupt)
            [status, pcdDataAvailable, pcdDataLost, pcdDataCorrupt]= mexdwf('FDwfAnalogInStatusRecord', hdwf, pcdDataAvailable, pcdDataLost, pcdDataCorrupt);
        end

        function [status] = FDwfAnalogInRecordLengthSet_nv(hdwf, sLegth)
            [status]= mexdwf('FDwfAnalogInRecordLengthSet', hdwf, sLegth);
        end

        function [status, psLegth] = FDwfAnalogInRecordLengthGet_nv(hdwf, psLegth)
            [status, psLegth]= mexdwf('FDwfAnalogInRecordLengthGet', hdwf, psLegth);
        end

        function [status, pfstrigsrc] = FDwfAnalogInTriggerSourceInfo_nv(hdwf, pfstrigsrc)
            [status, pfstrigsrc]= mexdwf('FDwfAnalogInTriggerSourceInfo', hdwf, pfstrigsrc);
        end

        function [status] = FDwfAnalogInTriggerSourceSet_nv(hdwf, trigsrc)
            [status]= mexdwf('FDwfAnalogInTriggerSourceSet', hdwf, trigsrc);
        end

        function [status, ptrigsrc] = FDwfAnalogInTriggerSourceGet_nv(hdwf, ptrigsrc)
            [status, ptrigsrc]= mexdwf('FDwfAnalogInTriggerSourceGet', hdwf, ptrigsrc);
        end

        function [status, psecMin, psecMax, pnSteps] = FDwfAnalogInTriggerPositionInfo_nv(hdwf, psecMin, psecMax, pnSteps)
            [status, psecMin, psecMax, pnSteps]= mexdwf('FDwfAnalogInTriggerPositionInfo', hdwf, psecMin, psecMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerPositionSet_nv(hdwf, secPosition)
            [status]= mexdwf('FDwfAnalogInTriggerPositionSet', hdwf, secPosition);
        end

        function [status, psecPosition] = FDwfAnalogInTriggerPositionGet_nv(hdwf, psecPosition)
            [status, psecPosition]= mexdwf('FDwfAnalogInTriggerPositionGet', hdwf, psecPosition);
        end

        function [status, psecMin, psecMax, pnSteps] = FDwfAnalogInTriggerAutoTimeoutInfo_nv(hdwf, psecMin, psecMax, pnSteps)
            [status, psecMin, psecMax, pnSteps]= mexdwf('FDwfAnalogInTriggerAutoTimeoutInfo', hdwf, psecMin, psecMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerAutoTimeoutSet_nv(hdwf, secTimeout)
            [status]= mexdwf('FDwfAnalogInTriggerAutoTimeoutSet', hdwf, secTimeout);
        end

        function [status, psecTimeout] = FDwfAnalogInTriggerAutoTimeoutGet_nv(hdwf, psecTimeout)
            [status, psecTimeout]= mexdwf('FDwfAnalogInTriggerAutoTimeoutGet', hdwf, psecTimeout);
        end

        function [status, psecMin, psecMax, pnStep] = FDwfAnalogInTriggerHoldOffInfo_nv(hdwf, psecMin, psecMax, pnStep)
            [status, psecMin, psecMax, pnStep]= mexdwf('FDwfAnalogInTriggerHoldOffInfo', hdwf, psecMin, psecMax, pnStep);
        end

        function [status] = FDwfAnalogInTriggerHoldOffSet_nv(hdwf, secHoldOff)
            [status]= mexdwf('FDwfAnalogInTriggerHoldOffSet', hdwf, secHoldOff);
        end

        function [status, psecHoldOff] = FDwfAnalogInTriggerHoldOffGet_nv(hdwf, psecHoldOff)
            [status, psecHoldOff]= mexdwf('FDwfAnalogInTriggerHoldOffGet', hdwf, psecHoldOff);
        end

        function [status, pfstrigtype] = FDwfAnalogInTriggerTypeInfo_nv(hdwf, pfstrigtype)
            [status, pfstrigtype]= mexdwf('FDwfAnalogInTriggerTypeInfo', hdwf, pfstrigtype);
        end

        function [status] = FDwfAnalogInTriggerTypeSet_nv(hdwf, trigtype)
            [status]= mexdwf('FDwfAnalogInTriggerTypeSet', hdwf, trigtype);
        end

        function [status, ptrigtype] = FDwfAnalogInTriggerTypeGet_nv(hdwf, ptrigtype)
            [status, ptrigtype]= mexdwf('FDwfAnalogInTriggerTypeGet', hdwf, ptrigtype);
        end

        function [status, pidxMin, pidxMax] = FDwfAnalogInTriggerChannelInfo_nv(hdwf, pidxMin, pidxMax)
            [status, pidxMin, pidxMax]= mexdwf('FDwfAnalogInTriggerChannelInfo', hdwf, pidxMin, pidxMax);
        end

        function [status] = FDwfAnalogInTriggerChannelSet_nv(hdwf, idxChannel)
            [status]= mexdwf('FDwfAnalogInTriggerChannelSet', hdwf, idxChannel);
        end

        function [status, pidxChannel] = FDwfAnalogInTriggerChannelGet_nv(hdwf, pidxChannel)
            [status, pidxChannel]= mexdwf('FDwfAnalogInTriggerChannelGet', hdwf, pidxChannel);
        end

        function [status, pfsfilter] = FDwfAnalogInTriggerFilterInfo_nv(hdwf, pfsfilter)
            [status, pfsfilter]= mexdwf('FDwfAnalogInTriggerFilterInfo', hdwf, pfsfilter);
        end

        function [status] = FDwfAnalogInTriggerFilterSet_nv(hdwf, filter)
            [status]= mexdwf('FDwfAnalogInTriggerFilterSet', hdwf, filter);
        end

        function [status, pfilter] = FDwfAnalogInTriggerFilterGet_nv(hdwf, pfilter)
            [status, pfilter]= mexdwf('FDwfAnalogInTriggerFilterGet', hdwf, pfilter);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInTriggerLevelInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            [status, pvoltsMin, pvoltsMax, pnSteps]= mexdwf('FDwfAnalogInTriggerLevelInfo', hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerLevelSet_nv(hdwf, voltsLevel)
            [status]= mexdwf('FDwfAnalogInTriggerLevelSet', hdwf, voltsLevel);
        end

        function [status, pvoltsLevel] = FDwfAnalogInTriggerLevelGet_nv(hdwf, pvoltsLevel)
            [status, pvoltsLevel]= mexdwf('FDwfAnalogInTriggerLevelGet', hdwf, pvoltsLevel);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInTriggerHysteresisInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            [status, pvoltsMin, pvoltsMax, pnSteps]= mexdwf('FDwfAnalogInTriggerHysteresisInfo', hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerHysteresisSet_nv(hdwf, voltsLevel)
            [status]= mexdwf('FDwfAnalogInTriggerHysteresisSet', hdwf, voltsLevel);
        end

        function [status, pvoltsHysteresis] = FDwfAnalogInTriggerHysteresisGet_nv(hdwf, pvoltsHysteresis)
            [status, pvoltsHysteresis]= mexdwf('FDwfAnalogInTriggerHysteresisGet', hdwf, pvoltsHysteresis);
        end

        function [status, pfstrigcond] = FDwfAnalogInTriggerConditionInfo_nv(hdwf, pfstrigcond)
            [status, pfstrigcond]= mexdwf('FDwfAnalogInTriggerConditionInfo', hdwf, pfstrigcond);
        end

        function [status] = FDwfAnalogInTriggerConditionSet_nv(hdwf, trigcond)
            [status]= mexdwf('FDwfAnalogInTriggerConditionSet', hdwf, trigcond);
        end

        function [status, ptrigcond] = FDwfAnalogInTriggerConditionGet_nv(hdwf, ptrigcond)
            [status, ptrigcond]= mexdwf('FDwfAnalogInTriggerConditionGet', hdwf, ptrigcond);
        end

        function [status, psecMin, psecMax, pnSteps] = FDwfAnalogInTriggerLengthInfo_nv(hdwf, psecMin, psecMax, pnSteps)
            [status, psecMin, psecMax, pnSteps]= mexdwf('FDwfAnalogInTriggerLengthInfo', hdwf, psecMin, psecMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerLengthSet_nv(hdwf, secLength)
            [status]= mexdwf('FDwfAnalogInTriggerLengthSet', hdwf, secLength);
        end

        function [status, psecLength] = FDwfAnalogInTriggerLengthGet_nv(hdwf, psecLength)
            [status, psecLength]= mexdwf('FDwfAnalogInTriggerLengthGet', hdwf, psecLength);
        end

        function [status, pfstriglen] = FDwfAnalogInTriggerLengthConditionInfo_nv(hdwf, pfstriglen)
            [status, pfstriglen]= mexdwf('FDwfAnalogInTriggerLengthConditionInfo', hdwf, pfstriglen);
        end

        function [status] = FDwfAnalogInTriggerLengthConditionSet_nv(hdwf, triglen)
            [status]= mexdwf('FDwfAnalogInTriggerLengthConditionSet', hdwf, triglen);
        end

        function [status, ptriglen] = FDwfAnalogInTriggerLengthConditionGet_nv(hdwf, ptriglen)
            [status, ptriglen]= mexdwf('FDwfAnalogInTriggerLengthConditionGet', hdwf, ptriglen);
        end

        function [status, pcChannel] = FDwfAnalogOutCount_nv(hdwf, pcChannel)
            [status, pcChannel]= mexdwf('FDwfAnalogOutCount', hdwf, pcChannel);
        end

        function [status] = FDwfAnalogOutEnableSet_nv(hdwf, idxChannel, fEnable)
            [status]= mexdwf('FDwfAnalogOutEnableSet', hdwf, idxChannel, fEnable);
        end

        function [status, pfEnable] = FDwfAnalogOutEnableGet_nv(hdwf, idxChannel, pfEnable)
            [status, pfEnable]= mexdwf('FDwfAnalogOutEnableGet', hdwf, idxChannel, pfEnable);
        end

        function [status, pfstrigsrc] = FDwfAnalogOutTriggerSourceInfo_nv(hdwf, idxChannel, pfstrigsrc)
            [status, pfstrigsrc]= mexdwf('FDwfAnalogOutTriggerSourceInfo', hdwf, idxChannel, pfstrigsrc);
        end

        function [status] = FDwfAnalogOutTriggerSourceSet_nv(hdwf, idxChannel, trigsrc)
            [status]= mexdwf('FDwfAnalogOutTriggerSourceSet', hdwf, idxChannel, trigsrc);
        end

        function [status, ptrigsrc] = FDwfAnalogOutTriggerSourceGet_nv(hdwf, idxChannel, ptrigsrc)
            [status, ptrigsrc]= mexdwf('FDwfAnalogOutTriggerSourceGet', hdwf, idxChannel, ptrigsrc);
        end

        function [status, psecMin, psecMax] = FDwfAnalogOutRunInfo_nv(hdwf, idxChannel, psecMin, psecMax)
            [status, psecMin, psecMax]= mexdwf('FDwfAnalogOutRunInfo', hdwf, idxChannel, psecMin, psecMax);
        end

        function [status] = FDwfAnalogOutRunSet_nv(hdwf, idxChannel, secRun)
            [status]= mexdwf('FDwfAnalogOutRunSet', hdwf, idxChannel, secRun);
        end

        function [status, psecRun] = FDwfAnalogOutRunGet_nv(hdwf, idxChannel, psecRun)
            [status, psecRun]= mexdwf('FDwfAnalogOutRunGet', hdwf, idxChannel, psecRun);
        end

        function [status, psecRun] = FDwfAnalogOutRunStatus_nv(hdwf, idxChannel, psecRun)
            [status, psecRun]= mexdwf('FDwfAnalogOutRunStatus', hdwf, idxChannel, psecRun);
        end

        function [status, psecMin, psecMax] = FDwfAnalogOutWaitInfo_nv(hdwf, idxChannel, psecMin, psecMax)
            [status, psecMin, psecMax]= mexdwf('FDwfAnalogOutWaitInfo', hdwf, idxChannel, psecMin, psecMax);
        end

        function [status] = FDwfAnalogOutWaitSet_nv(hdwf, idxChannel, secWait)
            [status]= mexdwf('FDwfAnalogOutWaitSet', hdwf, idxChannel, secWait);
        end

        function [status, psecWait] = FDwfAnalogOutWaitGet_nv(hdwf, idxChannel, psecWait)
            [status, psecWait]= mexdwf('FDwfAnalogOutWaitGet', hdwf, idxChannel, psecWait);
        end

        function [status, pnMin, pnMax] = FDwfAnalogOutRepeatInfo_nv(hdwf, idxChannel, pnMin, pnMax)
            [status, pnMin, pnMax]= mexdwf('FDwfAnalogOutRepeatInfo', hdwf, idxChannel, pnMin, pnMax);
        end

        function [status] = FDwfAnalogOutRepeatSet_nv(hdwf, idxChannel, cRepeat)
            [status]= mexdwf('FDwfAnalogOutRepeatSet', hdwf, idxChannel, cRepeat);
        end

        function [status, pcRepeat] = FDwfAnalogOutRepeatGet_nv(hdwf, idxChannel, pcRepeat)
            [status, pcRepeat]= mexdwf('FDwfAnalogOutRepeatGet', hdwf, idxChannel, pcRepeat);
        end

        function [status, pcRepeat] = FDwfAnalogOutRepeatStatus_nv(hdwf, idxChannel, pcRepeat)
            [status, pcRepeat]= mexdwf('FDwfAnalogOutRepeatStatus', hdwf, idxChannel, pcRepeat);
        end

        function [status] = FDwfAnalogOutRepeatTriggerSet_nv(hdwf, idxChannel, fRepeatTrigger)
            [status]= mexdwf('FDwfAnalogOutRepeatTriggerSet', hdwf, idxChannel, fRepeatTrigger);
        end

        function [status, pfRepeatTrigger] = FDwfAnalogOutRepeatTriggerGet_nv(hdwf, idxChannel, pfRepeatTrigger)
            [status, pfRepeatTrigger]= mexdwf('FDwfAnalogOutRepeatTriggerGet', hdwf, idxChannel, pfRepeatTrigger);
        end

        function [status, pfsfunc] = FDwfAnalogOutFunctionInfo_nv(hdwf, idxChannel, pfsfunc)
            [status, pfsfunc]= mexdwf('FDwfAnalogOutFunctionInfo', hdwf, idxChannel, pfsfunc);
        end

        function [status] = FDwfAnalogOutFunctionSet_nv(hdwf, idxChannel, func)
            [status]= mexdwf('FDwfAnalogOutFunctionSet', hdwf, idxChannel, func);
        end

        function [status, pfunc] = FDwfAnalogOutFunctionGet_nv(hdwf, idxChannel, pfunc)
            [status, pfunc]= mexdwf('FDwfAnalogOutFunctionGet', hdwf, idxChannel, pfunc);
        end

        function [status, phzMin, phzMax] = FDwfAnalogOutFrequencyInfo_nv(hdwf, idxChannel, phzMin, phzMax)
            [status, phzMin, phzMax]= mexdwf('FDwfAnalogOutFrequencyInfo', hdwf, idxChannel, phzMin, phzMax);
        end

        function [status] = FDwfAnalogOutFrequencySet_nv(hdwf, idxChannel, hzFrequency)
            [status]= mexdwf('FDwfAnalogOutFrequencySet', hdwf, idxChannel, hzFrequency);
        end

        function [status, phzFrequency] = FDwfAnalogOutFrequencyGet_nv(hdwf, idxChannel, phzFrequency)
            [status, phzFrequency]= mexdwf('FDwfAnalogOutFrequencyGet', hdwf, idxChannel, phzFrequency);
        end

        function [status, pvoltsMin, pvoltsMax] = FDwfAnalogOutAmplitudeInfo_nv(hdwf, idxChannel, pvoltsMin, pvoltsMax)
            [status, pvoltsMin, pvoltsMax]= mexdwf('FDwfAnalogOutAmplitudeInfo', hdwf, idxChannel, pvoltsMin, pvoltsMax);
        end

        function [status] = FDwfAnalogOutAmplitudeSet_nv(hdwf, idxChannel, voltsAmplitude)
            [status]= mexdwf('FDwfAnalogOutAmplitudeSet', hdwf, idxChannel, voltsAmplitude);
        end

        function [status, pvoltsAmplitude] = FDwfAnalogOutAmplitudeGet_nv(hdwf, idxChannel, pvoltsAmplitude)
            [status, pvoltsAmplitude]= mexdwf('FDwfAnalogOutAmplitudeGet', hdwf, idxChannel, pvoltsAmplitude);
        end

        function [status, pvoltsMin, pvoltsMax] = FDwfAnalogOutOffsetInfo_nv(hdwf, idxChannel, pvoltsMin, pvoltsMax)
            [status, pvoltsMin, pvoltsMax]= mexdwf('FDwfAnalogOutOffsetInfo', hdwf, idxChannel, pvoltsMin, pvoltsMax);
        end

        function [status] = FDwfAnalogOutOffsetSet_nv(hdwf, idxChannel, voltsOffset)
            [status]= mexdwf('FDwfAnalogOutOffsetSet', hdwf, idxChannel, voltsOffset);
        end

        function [status, pvoltsOffset] = FDwfAnalogOutOffsetGet_nv(hdwf, idxChannel, pvoltsOffset)
            [status, pvoltsOffset]= mexdwf('FDwfAnalogOutOffsetGet', hdwf, idxChannel, pvoltsOffset);
        end

        function [status, ppercentageMin, ppercentageMax] = FDwfAnalogOutSymmetryInfo_nv(hdwf, idxChannel, ppercentageMin, ppercentageMax)
            [status, ppercentageMin, ppercentageMax]= mexdwf('FDwfAnalogOutSymmetryInfo', hdwf, idxChannel, ppercentageMin, ppercentageMax);
        end

        function [status] = FDwfAnalogOutSymmetrySet_nv(hdwf, idxChannel, percentageSymmetry)
            [status]= mexdwf('FDwfAnalogOutSymmetrySet', hdwf, idxChannel, percentageSymmetry);
        end

        function [status, ppercentageSymmetry] = FDwfAnalogOutSymmetryGet_nv(hdwf, idxChannel, ppercentageSymmetry)
            [status, ppercentageSymmetry]= mexdwf('FDwfAnalogOutSymmetryGet', hdwf, idxChannel, ppercentageSymmetry);
        end

        function [status, pdegreeMin, pdegreeMax] = FDwfAnalogOutPhaseInfo_nv(hdwf, idxChannel, pdegreeMin, pdegreeMax)
            [status, pdegreeMin, pdegreeMax]= mexdwf('FDwfAnalogOutPhaseInfo', hdwf, idxChannel, pdegreeMin, pdegreeMax);
        end

        function [status] = FDwfAnalogOutPhaseSet_nv(hdwf, idxChannel, degreePhase)
            [status]= mexdwf('FDwfAnalogOutPhaseSet', hdwf, idxChannel, degreePhase);
        end

        function [status, pdegreePhase] = FDwfAnalogOutPhaseGet_nv(hdwf, idxChannel, pdegreePhase)
            [status, pdegreePhase]= mexdwf('FDwfAnalogOutPhaseGet', hdwf, idxChannel, pdegreePhase);
        end

        function [status, pnSamplesMin, pnSamplesMax] = FDwfAnalogOutDataInfo_nv(hdwf, idxChannel, pnSamplesMin, pnSamplesMax)
            [status, pnSamplesMin, pnSamplesMax]= mexdwf('FDwfAnalogOutDataInfo', hdwf, idxChannel, pnSamplesMin, pnSamplesMax);
        end

        function [status, rgdData] = FDwfAnalogOutDataSet_nv(hdwf, idxChannel, rgdData, cdData)
            [status, rgdData]= mexdwf('FDwfAnalogOutDataSet', hdwf, idxChannel, rgdData, cdData);
        end

        function [status, cdDataFree, cdDataLost, cdDataCorrupted] = FDwfAnalogOutPlayStatus_nv(hdwf, idxChannel, cdDataFree, cdDataLost, cdDataCorrupted)
            [status, cdDataFree, cdDataLost, cdDataCorrupted]= mexdwf('FDwfAnalogOutPlayStatus', hdwf, idxChannel, cdDataFree, cdDataLost, cdDataCorrupted);
        end

        function [status, rgdData] = FDwfAnalogOutPlayData_nv(hdwf, idxChannel, rgdData, cdData)
            [status, rgdData]= mexdwf('FDwfAnalogOutPlayData', hdwf, idxChannel, rgdData, cdData);
        end

        function [status] = FDwfAnalogOutReset_nv(hdwf, idxChannel)
            [status]= mexdwf('FDwfAnalogOutReset', hdwf, idxChannel);
        end

        function [status] = FDwfAnalogOutConfigure_nv(hdwf, idxChannel, fStart)
            [status]= mexdwf('FDwfAnalogOutConfigure', hdwf, idxChannel, fStart);
        end

        function [status, psts] = FDwfAnalogOutStatus_nv(hdwf, idxChannel, psts)
            [status, psts]= mexdwf('FDwfAnalogOutStatus', hdwf, idxChannel, psts);
        end

        function [status] = FDwfAnalogIOReset_nv(hdwf)
            [status]= mexdwf('FDwfAnalogIOReset', hdwf);
        end

        function [status] = FDwfAnalogIOConfigure_nv(hdwf)
            [status]= mexdwf('FDwfAnalogIOConfigure', hdwf);
        end

        function [status] = FDwfAnalogIOStatus_nv(hdwf)
            [status]= mexdwf('FDwfAnalogIOStatus', hdwf);
        end

        function [status, pfSet, pfStatus] = FDwfAnalogIOEnableInfo_nv(hdwf, pfSet, pfStatus)
            [status, pfSet, pfStatus]= mexdwf('FDwfAnalogIOEnableInfo', hdwf, pfSet, pfStatus);
        end

        function [status] = FDwfAnalogIOEnableSet_nv(hdwf, fMasterEnable)
            [status]= mexdwf('FDwfAnalogIOEnableSet', hdwf, fMasterEnable);
        end

        function [status, pfMasterEnable] = FDwfAnalogIOEnableGet_nv(hdwf, pfMasterEnable)
            [status, pfMasterEnable]= mexdwf('FDwfAnalogIOEnableGet', hdwf, pfMasterEnable);
        end

        function [status, pfMasterEnable] = FDwfAnalogIOEnableStatus_nv(hdwf, pfMasterEnable)
            [status, pfMasterEnable]= mexdwf('FDwfAnalogIOEnableStatus', hdwf, pfMasterEnable);
        end

        function [status, pnChannel] = FDwfAnalogIOChannelCount_nv(hdwf, pnChannel)
            [status, pnChannel]= mexdwf('FDwfAnalogIOChannelCount', hdwf, pnChannel);
        end

        function [status, szName, szLabel] = FDwfAnalogIOChannelName_nv(hdwf, idxChannel, szName, szLabel)
            [status, szName, szLabel]= mexdwf('FDwfAnalogIOChannelName', hdwf, idxChannel, szName, szLabel);
        end

        function [status, pnNodes] = FDwfAnalogIOChannelInfo_nv(hdwf, idxChannel, pnNodes)
            [status, pnNodes]= mexdwf('FDwfAnalogIOChannelInfo', hdwf, idxChannel, pnNodes);
        end

        function [status, szNodeName, szNodeUnits] = FDwfAnalogIOChannelNodeName_nv(hdwf, idxChannel, idxNode, szNodeName, szNodeUnits)
            [status, szNodeName, szNodeUnits]= mexdwf('FDwfAnalogIOChannelNodeName', hdwf, idxChannel, idxNode, szNodeName, szNodeUnits);
        end

        function [status, panalogio] = FDwfAnalogIOChannelNodeInfo_nv(hdwf, idxChannel, idxNode, panalogio)
            [status, panalogio]= mexdwf('FDwfAnalogIOChannelNodeInfo', hdwf, idxChannel, idxNode, panalogio);
        end

        function [status, pmin, pmax, pnSteps] = FDwfAnalogIOChannelNodeSetInfo_nv(hdwf, idxChannel, idxNode, pmin, pmax, pnSteps)
            [status, pmin, pmax, pnSteps]= mexdwf('FDwfAnalogIOChannelNodeSetInfo', hdwf, idxChannel, idxNode, pmin, pmax, pnSteps);
        end

        function [status] = FDwfAnalogIOChannelNodeSet_nv(hdwf, idxChannel, idxNode, value)
            [status]= mexdwf('FDwfAnalogIOChannelNodeSet', hdwf, idxChannel, idxNode, value);
        end

        function [status, pvalue] = FDwfAnalogIOChannelNodeGet_nv(hdwf, idxChannel, idxNode, pvalue)
            [status, pvalue]= mexdwf('FDwfAnalogIOChannelNodeGet', hdwf, idxChannel, idxNode, pvalue);
        end

        function [status, pmin, pmax, pnSteps] = FDwfAnalogIOChannelNodeStatusInfo_nv(hdwf, idxChannel, idxNode, pmin, pmax, pnSteps)
            [status, pmin, pmax, pnSteps]= mexdwf('FDwfAnalogIOChannelNodeStatusInfo', hdwf, idxChannel, idxNode, pmin, pmax, pnSteps);
        end

        function [status, pvalue] = FDwfAnalogIOChannelNodeStatus_nv(hdwf, idxChannel, idxNode, pvalue)
            [status, pvalue]= mexdwf('FDwfAnalogIOChannelNodeStatus', hdwf, idxChannel, idxNode, pvalue);
        end

        function [status] = FDwfDigitalIOReset_nv(hdwf)
            [status]= mexdwf('FDwfDigitalIOReset', hdwf);
        end

        function [status] = FDwfDigitalIOConfigure_nv(hdwf)
            [status]= mexdwf('FDwfDigitalIOConfigure', hdwf);
        end

        function [status] = FDwfDigitalIOStatus_nv(hdwf)
            [status]= mexdwf('FDwfDigitalIOStatus', hdwf);
        end

        function [status, pfsOutputEnableMask] = FDwfDigitalIOOutputEnableInfo_nv(hdwf, pfsOutputEnableMask)
            [status, pfsOutputEnableMask]= mexdwf('FDwfDigitalIOOutputEnableInfo', hdwf, pfsOutputEnableMask);
        end

        function [status] = FDwfDigitalIOOutputEnableSet_nv(hdwf, fsOutputEnable)
            [status]= mexdwf('FDwfDigitalIOOutputEnableSet', hdwf, fsOutputEnable);
        end

        function [status, pfsOutputEnable] = FDwfDigitalIOOutputEnableGet_nv(hdwf, pfsOutputEnable)
            [status, pfsOutputEnable]= mexdwf('FDwfDigitalIOOutputEnableGet', hdwf, pfsOutputEnable);
        end

        function [status, pfsOutputMask] = FDwfDigitalIOOutputInfo_nv(hdwf, pfsOutputMask)
            [status, pfsOutputMask]= mexdwf('FDwfDigitalIOOutputInfo', hdwf, pfsOutputMask);
        end

        function [status] = FDwfDigitalIOOutputSet_nv(hdwf, fsOutput)
            [status]= mexdwf('FDwfDigitalIOOutputSet', hdwf, fsOutput);
        end

        function [status, pfsOutput] = FDwfDigitalIOOutputGet_nv(hdwf, pfsOutput)
            [status, pfsOutput]= mexdwf('FDwfDigitalIOOutputGet', hdwf, pfsOutput);
        end

        function [status, pfsInputMask] = FDwfDigitalIOInputInfo_nv(hdwf, pfsInputMask)
            [status, pfsInputMask]= mexdwf('FDwfDigitalIOInputInfo', hdwf, pfsInputMask);
        end

        function [status, pfsInput] = FDwfDigitalIOInputStatus_nv(hdwf, pfsInput)
            [status, pfsInput]= mexdwf('FDwfDigitalIOInputStatus', hdwf, pfsInput);
        end

    end

    % Validating functions
    methods (Static)

        function [status, pdwferc] = FDwfGetLastError(pdwferc)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(pdwferc, {'int32'}, {'vector'}, 'FDwfGetLastError', 'pdwferc', 1);
            [status, pdwferc]= daq.di.dwf.FDwfGetLastError_nv(pdwferc);
        end

        function [status, szError] = FDwfGetLastErrorMsg(szError)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(szError, {'char'}, {'vector'}, 'FDwfGetLastErrorMsg', 'szError', 1);
            [status, szError]= daq.di.dwf.FDwfGetLastErrorMsg_nv(szError);
        end

        function [status, szVersion] = FDwfGetVersion(szVersion)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(szVersion, {'char'}, {'vector'}, 'FDwfGetVersion', 'szVersion', 1);
            [status, szVersion]= daq.di.dwf.FDwfGetVersion_nv(szVersion);
        end

        function [status, pcDeviceFound] = FDwfEnum(enumfilter, pcDeviceFound)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(enumfilter, {'int32'}, {'scalar'}, 'FDwfEnum', 'enumfilter', 1);
            validateattributes(pcDeviceFound, {'int32'}, {'vector'}, 'FDwfEnum', 'pcDeviceFound', 2);
            [status, pcDeviceFound]= daq.di.dwf.FDwfEnum_nv(enumfilter, pcDeviceFound);
        end

        function [status, pDeviceId, pDeviceRevision] = FDwfEnumDeviceType(idxDevice, pDeviceId, pDeviceRevision)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumDeviceType', 'idxDevice', 1);
            validateattributes(pDeviceId, {'int32'}, {'vector'}, 'FDwfEnumDeviceType', 'pDeviceId', 2);
            validateattributes(pDeviceRevision, {'int32'}, {'vector'}, 'FDwfEnumDeviceType', 'pDeviceRevision', 3);
            [status, pDeviceId, pDeviceRevision]= daq.di.dwf.FDwfEnumDeviceType_nv(idxDevice, pDeviceId, pDeviceRevision);
        end

        function [status, pfIsUsed] = FDwfEnumDeviceIsOpened(idxDevice, pfIsUsed)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumDeviceIsOpened', 'idxDevice', 1);
            validateattributes(pfIsUsed, {'int32'}, {'vector'}, 'FDwfEnumDeviceIsOpened', 'pfIsUsed', 2);
            [status, pfIsUsed]= daq.di.dwf.FDwfEnumDeviceIsOpened_nv(idxDevice, pfIsUsed);
        end

        function [status, szUserName] = FDwfEnumUserName(idxDevice, szUserName)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumUserName', 'idxDevice', 1);
            validateattributes(szUserName, {'char'}, {'vector'}, 'FDwfEnumUserName', 'szUserName', 2);
            [status, szUserName]= daq.di.dwf.FDwfEnumUserName_nv(idxDevice, szUserName);
        end

        function [status, szDeviceName] = FDwfEnumDeviceName(idxDevice, szDeviceName)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumDeviceName', 'idxDevice', 1);
            validateattributes(szDeviceName, {'char'}, {'vector'}, 'FDwfEnumDeviceName', 'szDeviceName', 2);
            [status, szDeviceName]= daq.di.dwf.FDwfEnumDeviceName_nv(idxDevice, szDeviceName);
        end

        function [status, szSN] = FDwfEnumSN(idxDevice, szSN)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumSN', 'idxDevice', 1);
            validateattributes(szSN, {'char'}, {'vector'}, 'FDwfEnumSN', 'szSN', 2);
            [status, szSN]= daq.di.dwf.FDwfEnumSN_nv(idxDevice, szSN);
        end

        function [status, pnChannels] = FDwfEnumAnalogInChannels(idxDevice, pnChannels)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumAnalogInChannels', 'idxDevice', 1);
            validateattributes(pnChannels, {'int32'}, {'vector'}, 'FDwfEnumAnalogInChannels', 'pnChannels', 2);
            [status, pnChannels]= daq.di.dwf.FDwfEnumAnalogInChannels_nv(idxDevice, pnChannels);
        end

        function [status, pnBufferSize] = FDwfEnumAnalogInBufferSize(idxDevice, pnBufferSize)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumAnalogInBufferSize', 'idxDevice', 1);
            validateattributes(pnBufferSize, {'int32'}, {'vector'}, 'FDwfEnumAnalogInBufferSize', 'pnBufferSize', 2);
            [status, pnBufferSize]= daq.di.dwf.FDwfEnumAnalogInBufferSize_nv(idxDevice, pnBufferSize);
        end

        function [status, pnBits] = FDwfEnumAnalogInBits(idxDevice, pnBits)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumAnalogInBits', 'idxDevice', 1);
            validateattributes(pnBits, {'int32'}, {'vector'}, 'FDwfEnumAnalogInBits', 'pnBits', 2);
            [status, pnBits]= daq.di.dwf.FDwfEnumAnalogInBits_nv(idxDevice, pnBits);
        end

        function [status, phzFrequency] = FDwfEnumAnalogInFrequency(idxDevice, phzFrequency)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfEnumAnalogInFrequency', 'idxDevice', 1);
            validateattributes(phzFrequency, {'double'}, {'vector'}, 'FDwfEnumAnalogInFrequency', 'phzFrequency', 2);
            [status, phzFrequency]= daq.di.dwf.FDwfEnumAnalogInFrequency_nv(idxDevice, phzFrequency);
        end

        function [status, phdwf] = FDwfDeviceOpen(idxDevice, phdwf)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(idxDevice, {'int32'}, {'scalar'}, 'FDwfDeviceOpen', 'idxDevice', 1);
            validateattributes(phdwf, {'int32'}, {'vector'}, 'FDwfDeviceOpen', 'phdwf', 2);
            [status, phdwf]= daq.di.dwf.FDwfDeviceOpen_nv(idxDevice, phdwf);
        end

        function [status] = FDwfDeviceClose(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDeviceClose', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfDeviceClose_nv(hdwf);
        end

        function [status] = FDwfDeviceCloseAll()
            error(nargchk(0, 0, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            [status]= daq.di.dwf.FDwfDeviceCloseAll_nv();
        end

        function [status] = FDwfDeviceAutoConfigureSet(hdwf, fConfigureWhenSet)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDeviceAutoConfigureSet', 'hdwf', 1);
            validateattributes(fConfigureWhenSet, {'int32'}, {'scalar'}, 'FDwfDeviceAutoConfigureSet', 'fConfigureWhenSet', 2);
            [status]= daq.di.dwf.FDwfDeviceAutoConfigureSet_nv(hdwf, fConfigureWhenSet);
        end

        function [status, pfConfigureWhenSet] = FDwfDeviceAutoConfigureGet(hdwf, pfConfigureWhenSet)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDeviceAutoConfigureGet', 'hdwf', 1);
            validateattributes(pfConfigureWhenSet, {'int32'}, {'vector'}, 'FDwfDeviceAutoConfigureGet', 'pfConfigureWhenSet', 2);
            [status, pfConfigureWhenSet]= daq.di.dwf.FDwfDeviceAutoConfigureGet_nv(hdwf, pfConfigureWhenSet);
        end

        function [status] = FDwfDeviceReset(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDeviceReset', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfDeviceReset_nv(hdwf);
        end

        function [status] = FDwfDeviceTriggerPC(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDeviceTriggerPC', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfDeviceTriggerPC_nv(hdwf);
        end

        function [status, phzMin, phzMax] = FDwfAnalogInFrequencyInfo(hdwf, phzMin, phzMax)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInFrequencyInfo', 'hdwf', 1);
            validateattributes(phzMin, {'double'}, {'vector'}, 'FDwfAnalogInFrequencyInfo', 'phzMin', 2);
            validateattributes(phzMax, {'double'}, {'vector'}, 'FDwfAnalogInFrequencyInfo', 'phzMax', 3);
            [status, phzMin, phzMax]= daq.di.dwf.FDwfAnalogInFrequencyInfo_nv(hdwf, phzMin, phzMax);
        end

        function [status] = FDwfAnalogInFrequencySet(hdwf, hzFrequency)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInFrequencySet', 'hdwf', 1);
            validateattributes(hzFrequency, {'double'}, {'scalar'}, 'FDwfAnalogInFrequencySet', 'hzFrequency', 2);
            [status]= daq.di.dwf.FDwfAnalogInFrequencySet_nv(hdwf, hzFrequency);
        end

        function [status, phzFrequency] = FDwfAnalogInFrequencyGet(hdwf, phzFrequency)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInFrequencyGet', 'hdwf', 1);
            validateattributes(phzFrequency, {'double'}, {'vector'}, 'FDwfAnalogInFrequencyGet', 'phzFrequency', 2);
            [status, phzFrequency]= daq.di.dwf.FDwfAnalogInFrequencyGet_nv(hdwf, phzFrequency);
        end

        function [status, pnBits] = FDwfAnalogInBitsInfo(hdwf, pnBits)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInBitsInfo', 'hdwf', 1);
            validateattributes(pnBits, {'int32'}, {'vector'}, 'FDwfAnalogInBitsInfo', 'pnBits', 2);
            [status, pnBits]= daq.di.dwf.FDwfAnalogInBitsInfo_nv(hdwf, pnBits);
        end

        function [status, pnSizeMin, pnSizeMax] = FDwfAnalogInBufferSizeInfo(hdwf, pnSizeMin, pnSizeMax)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInBufferSizeInfo', 'hdwf', 1);
            validateattributes(pnSizeMin, {'int32'}, {'vector'}, 'FDwfAnalogInBufferSizeInfo', 'pnSizeMin', 2);
            validateattributes(pnSizeMax, {'int32'}, {'vector'}, 'FDwfAnalogInBufferSizeInfo', 'pnSizeMax', 3);
            [status, pnSizeMin, pnSizeMax]= daq.di.dwf.FDwfAnalogInBufferSizeInfo_nv(hdwf, pnSizeMin, pnSizeMax);
        end

        function [status] = FDwfAnalogInBufferSizeSet(hdwf, nSize)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInBufferSizeSet', 'hdwf', 1);
            validateattributes(nSize, {'int32'}, {'scalar'}, 'FDwfAnalogInBufferSizeSet', 'nSize', 2);
            [status]= daq.di.dwf.FDwfAnalogInBufferSizeSet_nv(hdwf, nSize);
        end

        function [status, pnSize] = FDwfAnalogInBufferSizeGet(hdwf, pnSize)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInBufferSizeGet', 'hdwf', 1);
            validateattributes(pnSize, {'int32'}, {'vector'}, 'FDwfAnalogInBufferSizeGet', 'pnSize', 2);
            [status, pnSize]= daq.di.dwf.FDwfAnalogInBufferSizeGet_nv(hdwf, pnSize);
        end

        function [status, pfsacqmode] = FDwfAnalogInAcquisitionModeInfo(hdwf, pfsacqmode)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInAcquisitionModeInfo', 'hdwf', 1);
            validateattributes(pfsacqmode, {'int32'}, {'vector'}, 'FDwfAnalogInAcquisitionModeInfo', 'pfsacqmode', 2);
            [status, pfsacqmode]= daq.di.dwf.FDwfAnalogInAcquisitionModeInfo_nv(hdwf, pfsacqmode);
        end

        function [status] = FDwfAnalogInAcquisitionModeSet(hdwf, acqmode)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInAcquisitionModeSet', 'hdwf', 1);
            validateattributes(acqmode, {'int32'}, {'scalar'}, 'FDwfAnalogInAcquisitionModeSet', 'acqmode', 2);
            [status]= daq.di.dwf.FDwfAnalogInAcquisitionModeSet_nv(hdwf, acqmode);
        end

        function [status, pacqmode] = FDwfAnalogInAcquisitionModeGet(hdwf, pacqmode)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInAcquisitionModeGet', 'hdwf', 1);
            validateattributes(pacqmode, {'int32'}, {'vector'}, 'FDwfAnalogInAcquisitionModeGet', 'pacqmode', 2);
            [status, pacqmode]= daq.di.dwf.FDwfAnalogInAcquisitionModeGet_nv(hdwf, pacqmode);
        end

        function [status, pcChannel] = FDwfAnalogInChannelCount(hdwf, pcChannel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelCount', 'hdwf', 1);
            validateattributes(pcChannel, {'int32'}, {'vector'}, 'FDwfAnalogInChannelCount', 'pcChannel', 2);
            [status, pcChannel]= daq.di.dwf.FDwfAnalogInChannelCount_nv(hdwf, pcChannel);
        end

        function [status] = FDwfAnalogInChannelEnableSet(hdwf, idxChannel, fEnable)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelEnableSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelEnableSet', 'idxChannel', 2);
            validateattributes(fEnable, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelEnableSet', 'fEnable', 3);
            [status]= daq.di.dwf.FDwfAnalogInChannelEnableSet_nv(hdwf, idxChannel, fEnable);
        end

        function [status, pfEnable] = FDwfAnalogInChannelEnableGet(hdwf, idxChannel, pfEnable)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelEnableGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelEnableGet', 'idxChannel', 2);
            validateattributes(pfEnable, {'int32'}, {'vector'}, 'FDwfAnalogInChannelEnableGet', 'pfEnable', 3);
            [status, pfEnable]= daq.di.dwf.FDwfAnalogInChannelEnableGet_nv(hdwf, idxChannel, pfEnable);
        end

        function [status, pfsfilter] = FDwfAnalogInChannelFilterInfo(hdwf, pfsfilter)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelFilterInfo', 'hdwf', 1);
            validateattributes(pfsfilter, {'int32'}, {'vector'}, 'FDwfAnalogInChannelFilterInfo', 'pfsfilter', 2);
            [status, pfsfilter]= daq.di.dwf.FDwfAnalogInChannelFilterInfo_nv(hdwf, pfsfilter);
        end

        function [status] = FDwfAnalogInChannelFilterSet(hdwf, idxChannel, filter)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelFilterSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelFilterSet', 'idxChannel', 2);
            validateattributes(filter, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelFilterSet', 'filter', 3);
            [status]= daq.di.dwf.FDwfAnalogInChannelFilterSet_nv(hdwf, idxChannel, filter);
        end

        function [status, pfilter] = FDwfAnalogInChannelFilterGet(hdwf, idxChannel, pfilter)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelFilterGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelFilterGet', 'idxChannel', 2);
            validateattributes(pfilter, {'int32'}, {'vector'}, 'FDwfAnalogInChannelFilterGet', 'pfilter', 3);
            [status, pfilter]= daq.di.dwf.FDwfAnalogInChannelFilterGet_nv(hdwf, idxChannel, pfilter);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInChannelRangeInfo(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelRangeInfo', 'hdwf', 1);
            validateattributes(pvoltsMin, {'double'}, {'vector'}, 'FDwfAnalogInChannelRangeInfo', 'pvoltsMin', 2);
            validateattributes(pvoltsMax, {'double'}, {'vector'}, 'FDwfAnalogInChannelRangeInfo', 'pvoltsMax', 3);
            validateattributes(pnSteps, {'double'}, {'vector'}, 'FDwfAnalogInChannelRangeInfo', 'pnSteps', 4);
            [status, pvoltsMin, pvoltsMax, pnSteps]= daq.di.dwf.FDwfAnalogInChannelRangeInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status, rgVoltsStep, pnSteps] = FDwfAnalogInChannelRangeSteps(hdwf, rgVoltsStep, pnSteps)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelRangeSteps', 'hdwf', 1);
            validateattributes(rgVoltsStep, {'double'}, {'vector'}, 'FDwfAnalogInChannelRangeSteps', 'rgVoltsStep', 2);
            validateattributes(pnSteps, {'int32'}, {'vector'}, 'FDwfAnalogInChannelRangeSteps', 'pnSteps', 3);
            [status, rgVoltsStep, pnSteps]= daq.di.dwf.FDwfAnalogInChannelRangeSteps_nv(hdwf, rgVoltsStep, pnSteps);
        end

        function [status] = FDwfAnalogInChannelRangeSet(hdwf, idxChannel, voltsRange)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelRangeSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelRangeSet', 'idxChannel', 2);
            validateattributes(voltsRange, {'double'}, {'scalar'}, 'FDwfAnalogInChannelRangeSet', 'voltsRange', 3);
            [status]= daq.di.dwf.FDwfAnalogInChannelRangeSet_nv(hdwf, idxChannel, voltsRange);
        end

        function [status, pvoltsRange] = FDwfAnalogInChannelRangeGet(hdwf, idxChannel, pvoltsRange)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelRangeGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelRangeGet', 'idxChannel', 2);
            validateattributes(pvoltsRange, {'double'}, {'vector'}, 'FDwfAnalogInChannelRangeGet', 'pvoltsRange', 3);
            [status, pvoltsRange]= daq.di.dwf.FDwfAnalogInChannelRangeGet_nv(hdwf, idxChannel, pvoltsRange);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInChannelOffsetInfo(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelOffsetInfo', 'hdwf', 1);
            validateattributes(pvoltsMin, {'double'}, {'vector'}, 'FDwfAnalogInChannelOffsetInfo', 'pvoltsMin', 2);
            validateattributes(pvoltsMax, {'double'}, {'vector'}, 'FDwfAnalogInChannelOffsetInfo', 'pvoltsMax', 3);
            validateattributes(pnSteps, {'double'}, {'vector'}, 'FDwfAnalogInChannelOffsetInfo', 'pnSteps', 4);
            [status, pvoltsMin, pvoltsMax, pnSteps]= daq.di.dwf.FDwfAnalogInChannelOffsetInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status] = FDwfAnalogInChannelOffsetSet(hdwf, idxChannel, voltOffset)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelOffsetSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelOffsetSet', 'idxChannel', 2);
            validateattributes(voltOffset, {'double'}, {'scalar'}, 'FDwfAnalogInChannelOffsetSet', 'voltOffset', 3);
            [status]= daq.di.dwf.FDwfAnalogInChannelOffsetSet_nv(hdwf, idxChannel, voltOffset);
        end

        function [status, pvoltOffset] = FDwfAnalogInChannelOffsetGet(hdwf, idxChannel, pvoltOffset)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelOffsetGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInChannelOffsetGet', 'idxChannel', 2);
            validateattributes(pvoltOffset, {'double'}, {'vector'}, 'FDwfAnalogInChannelOffsetGet', 'pvoltOffset', 3);
            [status, pvoltOffset]= daq.di.dwf.FDwfAnalogInChannelOffsetGet_nv(hdwf, idxChannel, pvoltOffset);
        end

        function [status] = FDwfAnalogInReset(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInReset', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfAnalogInReset_nv(hdwf);
        end

        function [status] = FDwfAnalogInConfigure(hdwf, fReconfigure, fStart)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInConfigure', 'hdwf', 1);
            validateattributes(fReconfigure, {'int32'}, {'scalar'}, 'FDwfAnalogInConfigure', 'fReconfigure', 2);
            validateattributes(fStart, {'int32'}, {'scalar'}, 'FDwfAnalogInConfigure', 'fStart', 3);
            [status]= daq.di.dwf.FDwfAnalogInConfigure_nv(hdwf, fReconfigure, fStart);
        end

        function [status, psts] = FDwfAnalogInStatus(hdwf, fReadData, psts)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatus', 'hdwf', 1);
            validateattributes(fReadData, {'int32'}, {'scalar'}, 'FDwfAnalogInStatus', 'fReadData', 2);
            validateattributes(psts, {'char'}, {'vector'}, 'FDwfAnalogInStatus', 'psts', 3);
            [status, psts]= daq.di.dwf.FDwfAnalogInStatus_nv(hdwf, fReadData, psts);
        end

        function [status, pcSamplesLeft] = FDwfAnalogInStatusSamplesLeft(hdwf, pcSamplesLeft)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusSamplesLeft', 'hdwf', 1);
            validateattributes(pcSamplesLeft, {'int32'}, {'vector'}, 'FDwfAnalogInStatusSamplesLeft', 'pcSamplesLeft', 2);
            [status, pcSamplesLeft]= daq.di.dwf.FDwfAnalogInStatusSamplesLeft_nv(hdwf, pcSamplesLeft);
        end

        function [status, pcSamplesValid] = FDwfAnalogInStatusSamplesValid(hdwf, pcSamplesValid)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusSamplesValid', 'hdwf', 1);
            validateattributes(pcSamplesValid, {'int32'}, {'vector'}, 'FDwfAnalogInStatusSamplesValid', 'pcSamplesValid', 2);
            [status, pcSamplesValid]= daq.di.dwf.FDwfAnalogInStatusSamplesValid_nv(hdwf, pcSamplesValid);
        end

        function [status, pidxWrite] = FDwfAnalogInStatusIndexWrite(hdwf, pidxWrite)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusIndexWrite', 'hdwf', 1);
            validateattributes(pidxWrite, {'int32'}, {'vector'}, 'FDwfAnalogInStatusIndexWrite', 'pidxWrite', 2);
            [status, pidxWrite]= daq.di.dwf.FDwfAnalogInStatusIndexWrite_nv(hdwf, pidxWrite);
        end

        function [status, pfAuto] = FDwfAnalogInStatusAutoTriggered(hdwf, pfAuto)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusAutoTriggered', 'hdwf', 1);
            validateattributes(pfAuto, {'int32'}, {'vector'}, 'FDwfAnalogInStatusAutoTriggered', 'pfAuto', 2);
            [status, pfAuto]= daq.di.dwf.FDwfAnalogInStatusAutoTriggered_nv(hdwf, pfAuto);
        end

        function [status, rgdVoltData] = FDwfAnalogInStatusData(hdwf, idxChannel, rgdVoltData, cdData)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusData', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusData', 'idxChannel', 2);
            validateattributes(rgdVoltData, {'double'}, {'vector'}, 'FDwfAnalogInStatusData', 'rgdVoltData', 3);
            validateattributes(cdData, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusData', 'cdData', 4);
            [status, rgdVoltData]= daq.di.dwf.FDwfAnalogInStatusData_nv(hdwf, idxChannel, rgdVoltData, cdData);
        end

        function [status, pdVoltSample] = FDwfAnalogInStatusSample(hdwf, idxChannel, pdVoltSample)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusSample', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusSample', 'idxChannel', 2);
            validateattributes(pdVoltSample, {'double'}, {'vector'}, 'FDwfAnalogInStatusSample', 'pdVoltSample', 3);
            [status, pdVoltSample]= daq.di.dwf.FDwfAnalogInStatusSample_nv(hdwf, idxChannel, pdVoltSample);
        end

        function [status, pcdDataAvailable, pcdDataLost, pcdDataCorrupt] = FDwfAnalogInStatusRecord(hdwf, pcdDataAvailable, pcdDataLost, pcdDataCorrupt)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInStatusRecord', 'hdwf', 1);
            validateattributes(pcdDataAvailable, {'int32'}, {'vector'}, 'FDwfAnalogInStatusRecord', 'pcdDataAvailable', 2);
            validateattributes(pcdDataLost, {'int32'}, {'vector'}, 'FDwfAnalogInStatusRecord', 'pcdDataLost', 3);
            validateattributes(pcdDataCorrupt, {'int32'}, {'vector'}, 'FDwfAnalogInStatusRecord', 'pcdDataCorrupt', 4);
            [status, pcdDataAvailable, pcdDataLost, pcdDataCorrupt]= daq.di.dwf.FDwfAnalogInStatusRecord_nv(hdwf, pcdDataAvailable, pcdDataLost, pcdDataCorrupt);
        end

        function [status] = FDwfAnalogInRecordLengthSet(hdwf, sLegth)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInRecordLengthSet', 'hdwf', 1);
            validateattributes(sLegth, {'double'}, {'scalar'}, 'FDwfAnalogInRecordLengthSet', 'sLegth', 2);
            [status]= daq.di.dwf.FDwfAnalogInRecordLengthSet_nv(hdwf, sLegth);
        end

        function [status, psLegth] = FDwfAnalogInRecordLengthGet(hdwf, psLegth)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInRecordLengthGet', 'hdwf', 1);
            validateattributes(psLegth, {'double'}, {'vector'}, 'FDwfAnalogInRecordLengthGet', 'psLegth', 2);
            [status, psLegth]= daq.di.dwf.FDwfAnalogInRecordLengthGet_nv(hdwf, psLegth);
        end

        function [status, pfstrigsrc] = FDwfAnalogInTriggerSourceInfo(hdwf, pfstrigsrc)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerSourceInfo', 'hdwf', 1);
            validateattributes(pfstrigsrc, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerSourceInfo', 'pfstrigsrc', 2);
            [status, pfstrigsrc]= daq.di.dwf.FDwfAnalogInTriggerSourceInfo_nv(hdwf, pfstrigsrc);
        end

        function [status] = FDwfAnalogInTriggerSourceSet(hdwf, trigsrc)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerSourceSet', 'hdwf', 1);
            validateattributes(trigsrc, {'char'}, {'scalar'}, 'FDwfAnalogInTriggerSourceSet', 'trigsrc', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerSourceSet_nv(hdwf, trigsrc);
        end

        function [status, ptrigsrc] = FDwfAnalogInTriggerSourceGet(hdwf, ptrigsrc)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerSourceGet', 'hdwf', 1);
            validateattributes(ptrigsrc, {'char'}, {'vector'}, 'FDwfAnalogInTriggerSourceGet', 'ptrigsrc', 2);
            [status, ptrigsrc]= daq.di.dwf.FDwfAnalogInTriggerSourceGet_nv(hdwf, ptrigsrc);
        end

        function [status, psecMin, psecMax, pnSteps] = FDwfAnalogInTriggerPositionInfo(hdwf, psecMin, psecMax, pnSteps)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerPositionInfo', 'hdwf', 1);
            validateattributes(psecMin, {'double'}, {'vector'}, 'FDwfAnalogInTriggerPositionInfo', 'psecMin', 2);
            validateattributes(psecMax, {'double'}, {'vector'}, 'FDwfAnalogInTriggerPositionInfo', 'psecMax', 3);
            validateattributes(pnSteps, {'double'}, {'vector'}, 'FDwfAnalogInTriggerPositionInfo', 'pnSteps', 4);
            [status, psecMin, psecMax, pnSteps]= daq.di.dwf.FDwfAnalogInTriggerPositionInfo_nv(hdwf, psecMin, psecMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerPositionSet(hdwf, secPosition)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerPositionSet', 'hdwf', 1);
            validateattributes(secPosition, {'double'}, {'scalar'}, 'FDwfAnalogInTriggerPositionSet', 'secPosition', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerPositionSet_nv(hdwf, secPosition);
        end

        function [status, psecPosition] = FDwfAnalogInTriggerPositionGet(hdwf, psecPosition)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerPositionGet', 'hdwf', 1);
            validateattributes(psecPosition, {'double'}, {'vector'}, 'FDwfAnalogInTriggerPositionGet', 'psecPosition', 2);
            [status, psecPosition]= daq.di.dwf.FDwfAnalogInTriggerPositionGet_nv(hdwf, psecPosition);
        end

        function [status, psecMin, psecMax, pnSteps] = FDwfAnalogInTriggerAutoTimeoutInfo(hdwf, psecMin, psecMax, pnSteps)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerAutoTimeoutInfo', 'hdwf', 1);
            validateattributes(psecMin, {'double'}, {'vector'}, 'FDwfAnalogInTriggerAutoTimeoutInfo', 'psecMin', 2);
            validateattributes(psecMax, {'double'}, {'vector'}, 'FDwfAnalogInTriggerAutoTimeoutInfo', 'psecMax', 3);
            validateattributes(pnSteps, {'double'}, {'vector'}, 'FDwfAnalogInTriggerAutoTimeoutInfo', 'pnSteps', 4);
            [status, psecMin, psecMax, pnSteps]= daq.di.dwf.FDwfAnalogInTriggerAutoTimeoutInfo_nv(hdwf, psecMin, psecMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerAutoTimeoutSet(hdwf, secTimeout)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerAutoTimeoutSet', 'hdwf', 1);
            validateattributes(secTimeout, {'double'}, {'scalar'}, 'FDwfAnalogInTriggerAutoTimeoutSet', 'secTimeout', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerAutoTimeoutSet_nv(hdwf, secTimeout);
        end

        function [status, psecTimeout] = FDwfAnalogInTriggerAutoTimeoutGet(hdwf, psecTimeout)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerAutoTimeoutGet', 'hdwf', 1);
            validateattributes(psecTimeout, {'double'}, {'vector'}, 'FDwfAnalogInTriggerAutoTimeoutGet', 'psecTimeout', 2);
            [status, psecTimeout]= daq.di.dwf.FDwfAnalogInTriggerAutoTimeoutGet_nv(hdwf, psecTimeout);
        end

        function [status, psecMin, psecMax, pnStep] = FDwfAnalogInTriggerHoldOffInfo(hdwf, psecMin, psecMax, pnStep)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerHoldOffInfo', 'hdwf', 1);
            validateattributes(psecMin, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHoldOffInfo', 'psecMin', 2);
            validateattributes(psecMax, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHoldOffInfo', 'psecMax', 3);
            validateattributes(pnStep, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHoldOffInfo', 'pnStep', 4);
            [status, psecMin, psecMax, pnStep]= daq.di.dwf.FDwfAnalogInTriggerHoldOffInfo_nv(hdwf, psecMin, psecMax, pnStep);
        end

        function [status] = FDwfAnalogInTriggerHoldOffSet(hdwf, secHoldOff)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerHoldOffSet', 'hdwf', 1);
            validateattributes(secHoldOff, {'double'}, {'scalar'}, 'FDwfAnalogInTriggerHoldOffSet', 'secHoldOff', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerHoldOffSet_nv(hdwf, secHoldOff);
        end

        function [status, psecHoldOff] = FDwfAnalogInTriggerHoldOffGet(hdwf, psecHoldOff)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerHoldOffGet', 'hdwf', 1);
            validateattributes(psecHoldOff, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHoldOffGet', 'psecHoldOff', 2);
            [status, psecHoldOff]= daq.di.dwf.FDwfAnalogInTriggerHoldOffGet_nv(hdwf, psecHoldOff);
        end

        function [status, pfstrigtype] = FDwfAnalogInTriggerTypeInfo(hdwf, pfstrigtype)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerTypeInfo', 'hdwf', 1);
            validateattributes(pfstrigtype, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerTypeInfo', 'pfstrigtype', 2);
            [status, pfstrigtype]= daq.di.dwf.FDwfAnalogInTriggerTypeInfo_nv(hdwf, pfstrigtype);
        end

        function [status] = FDwfAnalogInTriggerTypeSet(hdwf, trigtype)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerTypeSet', 'hdwf', 1);
            validateattributes(trigtype, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerTypeSet', 'trigtype', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerTypeSet_nv(hdwf, trigtype);
        end

        function [status, ptrigtype] = FDwfAnalogInTriggerTypeGet(hdwf, ptrigtype)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerTypeGet', 'hdwf', 1);
            validateattributes(ptrigtype, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerTypeGet', 'ptrigtype', 2);
            [status, ptrigtype]= daq.di.dwf.FDwfAnalogInTriggerTypeGet_nv(hdwf, ptrigtype);
        end

        function [status, pidxMin, pidxMax] = FDwfAnalogInTriggerChannelInfo(hdwf, pidxMin, pidxMax)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerChannelInfo', 'hdwf', 1);
            validateattributes(pidxMin, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerChannelInfo', 'pidxMin', 2);
            validateattributes(pidxMax, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerChannelInfo', 'pidxMax', 3);
            [status, pidxMin, pidxMax]= daq.di.dwf.FDwfAnalogInTriggerChannelInfo_nv(hdwf, pidxMin, pidxMax);
        end

        function [status] = FDwfAnalogInTriggerChannelSet(hdwf, idxChannel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerChannelSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerChannelSet', 'idxChannel', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerChannelSet_nv(hdwf, idxChannel);
        end

        function [status, pidxChannel] = FDwfAnalogInTriggerChannelGet(hdwf, pidxChannel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerChannelGet', 'hdwf', 1);
            validateattributes(pidxChannel, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerChannelGet', 'pidxChannel', 2);
            [status, pidxChannel]= daq.di.dwf.FDwfAnalogInTriggerChannelGet_nv(hdwf, pidxChannel);
        end

        function [status, pfsfilter] = FDwfAnalogInTriggerFilterInfo(hdwf, pfsfilter)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerFilterInfo', 'hdwf', 1);
            validateattributes(pfsfilter, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerFilterInfo', 'pfsfilter', 2);
            [status, pfsfilter]= daq.di.dwf.FDwfAnalogInTriggerFilterInfo_nv(hdwf, pfsfilter);
        end

        function [status] = FDwfAnalogInTriggerFilterSet(hdwf, filter)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerFilterSet', 'hdwf', 1);
            validateattributes(filter, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerFilterSet', 'filter', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerFilterSet_nv(hdwf, filter);
        end

        function [status, pfilter] = FDwfAnalogInTriggerFilterGet(hdwf, pfilter)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerFilterGet', 'hdwf', 1);
            validateattributes(pfilter, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerFilterGet', 'pfilter', 2);
            [status, pfilter]= daq.di.dwf.FDwfAnalogInTriggerFilterGet_nv(hdwf, pfilter);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInTriggerLevelInfo(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLevelInfo', 'hdwf', 1);
            validateattributes(pvoltsMin, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLevelInfo', 'pvoltsMin', 2);
            validateattributes(pvoltsMax, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLevelInfo', 'pvoltsMax', 3);
            validateattributes(pnSteps, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLevelInfo', 'pnSteps', 4);
            [status, pvoltsMin, pvoltsMax, pnSteps]= daq.di.dwf.FDwfAnalogInTriggerLevelInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerLevelSet(hdwf, voltsLevel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLevelSet', 'hdwf', 1);
            validateattributes(voltsLevel, {'double'}, {'scalar'}, 'FDwfAnalogInTriggerLevelSet', 'voltsLevel', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerLevelSet_nv(hdwf, voltsLevel);
        end

        function [status, pvoltsLevel] = FDwfAnalogInTriggerLevelGet(hdwf, pvoltsLevel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLevelGet', 'hdwf', 1);
            validateattributes(pvoltsLevel, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLevelGet', 'pvoltsLevel', 2);
            [status, pvoltsLevel]= daq.di.dwf.FDwfAnalogInTriggerLevelGet_nv(hdwf, pvoltsLevel);
        end

        function [status, pvoltsMin, pvoltsMax, pnSteps] = FDwfAnalogInTriggerHysteresisInfo(hdwf, pvoltsMin, pvoltsMax, pnSteps)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerHysteresisInfo', 'hdwf', 1);
            validateattributes(pvoltsMin, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHysteresisInfo', 'pvoltsMin', 2);
            validateattributes(pvoltsMax, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHysteresisInfo', 'pvoltsMax', 3);
            validateattributes(pnSteps, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHysteresisInfo', 'pnSteps', 4);
            [status, pvoltsMin, pvoltsMax, pnSteps]= daq.di.dwf.FDwfAnalogInTriggerHysteresisInfo_nv(hdwf, pvoltsMin, pvoltsMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerHysteresisSet(hdwf, voltsLevel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerHysteresisSet', 'hdwf', 1);
            validateattributes(voltsLevel, {'double'}, {'scalar'}, 'FDwfAnalogInTriggerHysteresisSet', 'voltsLevel', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerHysteresisSet_nv(hdwf, voltsLevel);
        end

        function [status, pvoltsHysteresis] = FDwfAnalogInTriggerHysteresisGet(hdwf, pvoltsHysteresis)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerHysteresisGet', 'hdwf', 1);
            validateattributes(pvoltsHysteresis, {'double'}, {'vector'}, 'FDwfAnalogInTriggerHysteresisGet', 'pvoltsHysteresis', 2);
            [status, pvoltsHysteresis]= daq.di.dwf.FDwfAnalogInTriggerHysteresisGet_nv(hdwf, pvoltsHysteresis);
        end

        function [status, pfstrigcond] = FDwfAnalogInTriggerConditionInfo(hdwf, pfstrigcond)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerConditionInfo', 'hdwf', 1);
            validateattributes(pfstrigcond, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerConditionInfo', 'pfstrigcond', 2);
            [status, pfstrigcond]= daq.di.dwf.FDwfAnalogInTriggerConditionInfo_nv(hdwf, pfstrigcond);
        end

        function [status] = FDwfAnalogInTriggerConditionSet(hdwf, trigcond)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerConditionSet', 'hdwf', 1);
            validateattributes(trigcond, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerConditionSet', 'trigcond', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerConditionSet_nv(hdwf, trigcond);
        end

        function [status, ptrigcond] = FDwfAnalogInTriggerConditionGet(hdwf, ptrigcond)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerConditionGet', 'hdwf', 1);
            validateattributes(ptrigcond, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerConditionGet', 'ptrigcond', 2);
            [status, ptrigcond]= daq.di.dwf.FDwfAnalogInTriggerConditionGet_nv(hdwf, ptrigcond);
        end

        function [status, psecMin, psecMax, pnSteps] = FDwfAnalogInTriggerLengthInfo(hdwf, psecMin, psecMax, pnSteps)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLengthInfo', 'hdwf', 1);
            validateattributes(psecMin, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLengthInfo', 'psecMin', 2);
            validateattributes(psecMax, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLengthInfo', 'psecMax', 3);
            validateattributes(pnSteps, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLengthInfo', 'pnSteps', 4);
            [status, psecMin, psecMax, pnSteps]= daq.di.dwf.FDwfAnalogInTriggerLengthInfo_nv(hdwf, psecMin, psecMax, pnSteps);
        end

        function [status] = FDwfAnalogInTriggerLengthSet(hdwf, secLength)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLengthSet', 'hdwf', 1);
            validateattributes(secLength, {'double'}, {'scalar'}, 'FDwfAnalogInTriggerLengthSet', 'secLength', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerLengthSet_nv(hdwf, secLength);
        end

        function [status, psecLength] = FDwfAnalogInTriggerLengthGet(hdwf, psecLength)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLengthGet', 'hdwf', 1);
            validateattributes(psecLength, {'double'}, {'vector'}, 'FDwfAnalogInTriggerLengthGet', 'psecLength', 2);
            [status, psecLength]= daq.di.dwf.FDwfAnalogInTriggerLengthGet_nv(hdwf, psecLength);
        end

        function [status, pfstriglen] = FDwfAnalogInTriggerLengthConditionInfo(hdwf, pfstriglen)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLengthConditionInfo', 'hdwf', 1);
            validateattributes(pfstriglen, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerLengthConditionInfo', 'pfstriglen', 2);
            [status, pfstriglen]= daq.di.dwf.FDwfAnalogInTriggerLengthConditionInfo_nv(hdwf, pfstriglen);
        end

        function [status] = FDwfAnalogInTriggerLengthConditionSet(hdwf, triglen)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLengthConditionSet', 'hdwf', 1);
            validateattributes(triglen, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLengthConditionSet', 'triglen', 2);
            [status]= daq.di.dwf.FDwfAnalogInTriggerLengthConditionSet_nv(hdwf, triglen);
        end

        function [status, ptriglen] = FDwfAnalogInTriggerLengthConditionGet(hdwf, ptriglen)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogInTriggerLengthConditionGet', 'hdwf', 1);
            validateattributes(ptriglen, {'int32'}, {'vector'}, 'FDwfAnalogInTriggerLengthConditionGet', 'ptriglen', 2);
            [status, ptriglen]= daq.di.dwf.FDwfAnalogInTriggerLengthConditionGet_nv(hdwf, ptriglen);
        end

        function [status, pcChannel] = FDwfAnalogOutCount(hdwf, pcChannel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutCount', 'hdwf', 1);
            validateattributes(pcChannel, {'int32'}, {'vector'}, 'FDwfAnalogOutCount', 'pcChannel', 2);
            [status, pcChannel]= daq.di.dwf.FDwfAnalogOutCount_nv(hdwf, pcChannel);
        end

        function [status] = FDwfAnalogOutEnableSet(hdwf, idxChannel, fEnable)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutEnableSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutEnableSet', 'idxChannel', 2);
            validateattributes(fEnable, {'int32'}, {'scalar'}, 'FDwfAnalogOutEnableSet', 'fEnable', 3);
            [status]= daq.di.dwf.FDwfAnalogOutEnableSet_nv(hdwf, idxChannel, fEnable);
        end

        function [status, pfEnable] = FDwfAnalogOutEnableGet(hdwf, idxChannel, pfEnable)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutEnableGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutEnableGet', 'idxChannel', 2);
            validateattributes(pfEnable, {'int32'}, {'vector'}, 'FDwfAnalogOutEnableGet', 'pfEnable', 3);
            [status, pfEnable]= daq.di.dwf.FDwfAnalogOutEnableGet_nv(hdwf, idxChannel, pfEnable);
        end

        function [status, pfstrigsrc] = FDwfAnalogOutTriggerSourceInfo(hdwf, idxChannel, pfstrigsrc)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutTriggerSourceInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutTriggerSourceInfo', 'idxChannel', 2);
            validateattributes(pfstrigsrc, {'int32'}, {'vector'}, 'FDwfAnalogOutTriggerSourceInfo', 'pfstrigsrc', 3);
            [status, pfstrigsrc]= daq.di.dwf.FDwfAnalogOutTriggerSourceInfo_nv(hdwf, idxChannel, pfstrigsrc);
        end

        function [status] = FDwfAnalogOutTriggerSourceSet(hdwf, idxChannel, trigsrc)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutTriggerSourceSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutTriggerSourceSet', 'idxChannel', 2);
            validateattributes(trigsrc, {'char'}, {'scalar'}, 'FDwfAnalogOutTriggerSourceSet', 'trigsrc', 3);
            [status]= daq.di.dwf.FDwfAnalogOutTriggerSourceSet_nv(hdwf, idxChannel, trigsrc);
        end

        function [status, ptrigsrc] = FDwfAnalogOutTriggerSourceGet(hdwf, idxChannel, ptrigsrc)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutTriggerSourceGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutTriggerSourceGet', 'idxChannel', 2);
            validateattributes(ptrigsrc, {'char'}, {'vector'}, 'FDwfAnalogOutTriggerSourceGet', 'ptrigsrc', 3);
            [status, ptrigsrc]= daq.di.dwf.FDwfAnalogOutTriggerSourceGet_nv(hdwf, idxChannel, ptrigsrc);
        end

        function [status, psecMin, psecMax] = FDwfAnalogOutRunInfo(hdwf, idxChannel, psecMin, psecMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunInfo', 'idxChannel', 2);
            validateattributes(psecMin, {'double'}, {'vector'}, 'FDwfAnalogOutRunInfo', 'psecMin', 3);
            validateattributes(psecMax, {'double'}, {'vector'}, 'FDwfAnalogOutRunInfo', 'psecMax', 4);
            [status, psecMin, psecMax]= daq.di.dwf.FDwfAnalogOutRunInfo_nv(hdwf, idxChannel, psecMin, psecMax);
        end

        function [status] = FDwfAnalogOutRunSet(hdwf, idxChannel, secRun)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunSet', 'idxChannel', 2);
            validateattributes(secRun, {'double'}, {'scalar'}, 'FDwfAnalogOutRunSet', 'secRun', 3);
            [status]= daq.di.dwf.FDwfAnalogOutRunSet_nv(hdwf, idxChannel, secRun);
        end

        function [status, psecRun] = FDwfAnalogOutRunGet(hdwf, idxChannel, psecRun)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunGet', 'idxChannel', 2);
            validateattributes(psecRun, {'double'}, {'vector'}, 'FDwfAnalogOutRunGet', 'psecRun', 3);
            [status, psecRun]= daq.di.dwf.FDwfAnalogOutRunGet_nv(hdwf, idxChannel, psecRun);
        end

        function [status, psecRun] = FDwfAnalogOutRunStatus(hdwf, idxChannel, psecRun)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunStatus', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRunStatus', 'idxChannel', 2);
            validateattributes(psecRun, {'double'}, {'vector'}, 'FDwfAnalogOutRunStatus', 'psecRun', 3);
            [status, psecRun]= daq.di.dwf.FDwfAnalogOutRunStatus_nv(hdwf, idxChannel, psecRun);
        end

        function [status, psecMin, psecMax] = FDwfAnalogOutWaitInfo(hdwf, idxChannel, psecMin, psecMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutWaitInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutWaitInfo', 'idxChannel', 2);
            validateattributes(psecMin, {'double'}, {'vector'}, 'FDwfAnalogOutWaitInfo', 'psecMin', 3);
            validateattributes(psecMax, {'double'}, {'vector'}, 'FDwfAnalogOutWaitInfo', 'psecMax', 4);
            [status, psecMin, psecMax]= daq.di.dwf.FDwfAnalogOutWaitInfo_nv(hdwf, idxChannel, psecMin, psecMax);
        end

        function [status] = FDwfAnalogOutWaitSet(hdwf, idxChannel, secWait)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutWaitSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutWaitSet', 'idxChannel', 2);
            validateattributes(secWait, {'double'}, {'scalar'}, 'FDwfAnalogOutWaitSet', 'secWait', 3);
            [status]= daq.di.dwf.FDwfAnalogOutWaitSet_nv(hdwf, idxChannel, secWait);
        end

        function [status, psecWait] = FDwfAnalogOutWaitGet(hdwf, idxChannel, psecWait)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutWaitGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutWaitGet', 'idxChannel', 2);
            validateattributes(psecWait, {'double'}, {'vector'}, 'FDwfAnalogOutWaitGet', 'psecWait', 3);
            [status, psecWait]= daq.di.dwf.FDwfAnalogOutWaitGet_nv(hdwf, idxChannel, psecWait);
        end

        function [status, pnMin, pnMax] = FDwfAnalogOutRepeatInfo(hdwf, idxChannel, pnMin, pnMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatInfo', 'idxChannel', 2);
            validateattributes(pnMin, {'int32'}, {'vector'}, 'FDwfAnalogOutRepeatInfo', 'pnMin', 3);
            validateattributes(pnMax, {'int32'}, {'vector'}, 'FDwfAnalogOutRepeatInfo', 'pnMax', 4);
            [status, pnMin, pnMax]= daq.di.dwf.FDwfAnalogOutRepeatInfo_nv(hdwf, idxChannel, pnMin, pnMax);
        end

        function [status] = FDwfAnalogOutRepeatSet(hdwf, idxChannel, cRepeat)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatSet', 'idxChannel', 2);
            validateattributes(cRepeat, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatSet', 'cRepeat', 3);
            [status]= daq.di.dwf.FDwfAnalogOutRepeatSet_nv(hdwf, idxChannel, cRepeat);
        end

        function [status, pcRepeat] = FDwfAnalogOutRepeatGet(hdwf, idxChannel, pcRepeat)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatGet', 'idxChannel', 2);
            validateattributes(pcRepeat, {'int32'}, {'vector'}, 'FDwfAnalogOutRepeatGet', 'pcRepeat', 3);
            [status, pcRepeat]= daq.di.dwf.FDwfAnalogOutRepeatGet_nv(hdwf, idxChannel, pcRepeat);
        end

        function [status, pcRepeat] = FDwfAnalogOutRepeatStatus(hdwf, idxChannel, pcRepeat)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatStatus', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatStatus', 'idxChannel', 2);
            validateattributes(pcRepeat, {'int32'}, {'vector'}, 'FDwfAnalogOutRepeatStatus', 'pcRepeat', 3);
            [status, pcRepeat]= daq.di.dwf.FDwfAnalogOutRepeatStatus_nv(hdwf, idxChannel, pcRepeat);
        end

        function [status] = FDwfAnalogOutRepeatTriggerSet(hdwf, idxChannel, fRepeatTrigger)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatTriggerSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatTriggerSet', 'idxChannel', 2);
            validateattributes(fRepeatTrigger, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatTriggerSet', 'fRepeatTrigger', 3);
            [status]= daq.di.dwf.FDwfAnalogOutRepeatTriggerSet_nv(hdwf, idxChannel, fRepeatTrigger);
        end

        function [status, pfRepeatTrigger] = FDwfAnalogOutRepeatTriggerGet(hdwf, idxChannel, pfRepeatTrigger)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatTriggerGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutRepeatTriggerGet', 'idxChannel', 2);
            validateattributes(pfRepeatTrigger, {'int32'}, {'vector'}, 'FDwfAnalogOutRepeatTriggerGet', 'pfRepeatTrigger', 3);
            [status, pfRepeatTrigger]= daq.di.dwf.FDwfAnalogOutRepeatTriggerGet_nv(hdwf, idxChannel, pfRepeatTrigger);
        end

        function [status, pfsfunc] = FDwfAnalogOutFunctionInfo(hdwf, idxChannel, pfsfunc)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutFunctionInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutFunctionInfo', 'idxChannel', 2);
            validateattributes(pfsfunc, {'int32'}, {'vector'}, 'FDwfAnalogOutFunctionInfo', 'pfsfunc', 3);
            [status, pfsfunc]= daq.di.dwf.FDwfAnalogOutFunctionInfo_nv(hdwf, idxChannel, pfsfunc);
        end

        function [status] = FDwfAnalogOutFunctionSet(hdwf, idxChannel, func)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutFunctionSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutFunctionSet', 'idxChannel', 2);
            validateattributes(func, {'uint8'}, {'scalar'}, 'FDwfAnalogOutFunctionSet', 'func', 3);
            [status]= daq.di.dwf.FDwfAnalogOutFunctionSet_nv(hdwf, idxChannel, func);
        end

        function [status, pfunc] = FDwfAnalogOutFunctionGet(hdwf, idxChannel, pfunc)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutFunctionGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutFunctionGet', 'idxChannel', 2);
            validateattributes(pfunc, {'uint8'}, {'vector'}, 'FDwfAnalogOutFunctionGet', 'pfunc', 3);
            [status, pfunc]= daq.di.dwf.FDwfAnalogOutFunctionGet_nv(hdwf, idxChannel, pfunc);
        end

        function [status, phzMin, phzMax] = FDwfAnalogOutFrequencyInfo(hdwf, idxChannel, phzMin, phzMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutFrequencyInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutFrequencyInfo', 'idxChannel', 2);
            validateattributes(phzMin, {'double'}, {'vector'}, 'FDwfAnalogOutFrequencyInfo', 'phzMin', 3);
            validateattributes(phzMax, {'double'}, {'vector'}, 'FDwfAnalogOutFrequencyInfo', 'phzMax', 4);
            [status, phzMin, phzMax]= daq.di.dwf.FDwfAnalogOutFrequencyInfo_nv(hdwf, idxChannel, phzMin, phzMax);
        end

        function [status] = FDwfAnalogOutFrequencySet(hdwf, idxChannel, hzFrequency)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutFrequencySet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutFrequencySet', 'idxChannel', 2);
            validateattributes(hzFrequency, {'double'}, {'scalar'}, 'FDwfAnalogOutFrequencySet', 'hzFrequency', 3);
            [status]= daq.di.dwf.FDwfAnalogOutFrequencySet_nv(hdwf, idxChannel, hzFrequency);
        end

        function [status, phzFrequency] = FDwfAnalogOutFrequencyGet(hdwf, idxChannel, phzFrequency)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutFrequencyGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutFrequencyGet', 'idxChannel', 2);
            validateattributes(phzFrequency, {'double'}, {'vector'}, 'FDwfAnalogOutFrequencyGet', 'phzFrequency', 3);
            [status, phzFrequency]= daq.di.dwf.FDwfAnalogOutFrequencyGet_nv(hdwf, idxChannel, phzFrequency);
        end

        function [status, pvoltsMin, pvoltsMax] = FDwfAnalogOutAmplitudeInfo(hdwf, idxChannel, pvoltsMin, pvoltsMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutAmplitudeInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutAmplitudeInfo', 'idxChannel', 2);
            validateattributes(pvoltsMin, {'double'}, {'vector'}, 'FDwfAnalogOutAmplitudeInfo', 'pvoltsMin', 3);
            validateattributes(pvoltsMax, {'double'}, {'vector'}, 'FDwfAnalogOutAmplitudeInfo', 'pvoltsMax', 4);
            [status, pvoltsMin, pvoltsMax]= daq.di.dwf.FDwfAnalogOutAmplitudeInfo_nv(hdwf, idxChannel, pvoltsMin, pvoltsMax);
        end

        function [status] = FDwfAnalogOutAmplitudeSet(hdwf, idxChannel, voltsAmplitude)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutAmplitudeSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutAmplitudeSet', 'idxChannel', 2);
            validateattributes(voltsAmplitude, {'double'}, {'scalar'}, 'FDwfAnalogOutAmplitudeSet', 'voltsAmplitude', 3);
            [status]= daq.di.dwf.FDwfAnalogOutAmplitudeSet_nv(hdwf, idxChannel, voltsAmplitude);
        end

        function [status, pvoltsAmplitude] = FDwfAnalogOutAmplitudeGet(hdwf, idxChannel, pvoltsAmplitude)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutAmplitudeGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutAmplitudeGet', 'idxChannel', 2);
            validateattributes(pvoltsAmplitude, {'double'}, {'vector'}, 'FDwfAnalogOutAmplitudeGet', 'pvoltsAmplitude', 3);
            [status, pvoltsAmplitude]= daq.di.dwf.FDwfAnalogOutAmplitudeGet_nv(hdwf, idxChannel, pvoltsAmplitude);
        end

        function [status, pvoltsMin, pvoltsMax] = FDwfAnalogOutOffsetInfo(hdwf, idxChannel, pvoltsMin, pvoltsMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutOffsetInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutOffsetInfo', 'idxChannel', 2);
            validateattributes(pvoltsMin, {'double'}, {'vector'}, 'FDwfAnalogOutOffsetInfo', 'pvoltsMin', 3);
            validateattributes(pvoltsMax, {'double'}, {'vector'}, 'FDwfAnalogOutOffsetInfo', 'pvoltsMax', 4);
            [status, pvoltsMin, pvoltsMax]= daq.di.dwf.FDwfAnalogOutOffsetInfo_nv(hdwf, idxChannel, pvoltsMin, pvoltsMax);
        end

        function [status] = FDwfAnalogOutOffsetSet(hdwf, idxChannel, voltsOffset)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutOffsetSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutOffsetSet', 'idxChannel', 2);
            validateattributes(voltsOffset, {'double'}, {'scalar'}, 'FDwfAnalogOutOffsetSet', 'voltsOffset', 3);
            [status]= daq.di.dwf.FDwfAnalogOutOffsetSet_nv(hdwf, idxChannel, voltsOffset);
        end

        function [status, pvoltsOffset] = FDwfAnalogOutOffsetGet(hdwf, idxChannel, pvoltsOffset)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutOffsetGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutOffsetGet', 'idxChannel', 2);
            validateattributes(pvoltsOffset, {'double'}, {'vector'}, 'FDwfAnalogOutOffsetGet', 'pvoltsOffset', 3);
            [status, pvoltsOffset]= daq.di.dwf.FDwfAnalogOutOffsetGet_nv(hdwf, idxChannel, pvoltsOffset);
        end

        function [status, ppercentageMin, ppercentageMax] = FDwfAnalogOutSymmetryInfo(hdwf, idxChannel, ppercentageMin, ppercentageMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutSymmetryInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutSymmetryInfo', 'idxChannel', 2);
            validateattributes(ppercentageMin, {'double'}, {'vector'}, 'FDwfAnalogOutSymmetryInfo', 'ppercentageMin', 3);
            validateattributes(ppercentageMax, {'double'}, {'vector'}, 'FDwfAnalogOutSymmetryInfo', 'ppercentageMax', 4);
            [status, ppercentageMin, ppercentageMax]= daq.di.dwf.FDwfAnalogOutSymmetryInfo_nv(hdwf, idxChannel, ppercentageMin, ppercentageMax);
        end

        function [status] = FDwfAnalogOutSymmetrySet(hdwf, idxChannel, percentageSymmetry)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutSymmetrySet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutSymmetrySet', 'idxChannel', 2);
            validateattributes(percentageSymmetry, {'double'}, {'scalar'}, 'FDwfAnalogOutSymmetrySet', 'percentageSymmetry', 3);
            [status]= daq.di.dwf.FDwfAnalogOutSymmetrySet_nv(hdwf, idxChannel, percentageSymmetry);
        end

        function [status, ppercentageSymmetry] = FDwfAnalogOutSymmetryGet(hdwf, idxChannel, ppercentageSymmetry)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutSymmetryGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutSymmetryGet', 'idxChannel', 2);
            validateattributes(ppercentageSymmetry, {'double'}, {'vector'}, 'FDwfAnalogOutSymmetryGet', 'ppercentageSymmetry', 3);
            [status, ppercentageSymmetry]= daq.di.dwf.FDwfAnalogOutSymmetryGet_nv(hdwf, idxChannel, ppercentageSymmetry);
        end

        function [status, pdegreeMin, pdegreeMax] = FDwfAnalogOutPhaseInfo(hdwf, idxChannel, pdegreeMin, pdegreeMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutPhaseInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutPhaseInfo', 'idxChannel', 2);
            validateattributes(pdegreeMin, {'double'}, {'vector'}, 'FDwfAnalogOutPhaseInfo', 'pdegreeMin', 3);
            validateattributes(pdegreeMax, {'double'}, {'vector'}, 'FDwfAnalogOutPhaseInfo', 'pdegreeMax', 4);
            [status, pdegreeMin, pdegreeMax]= daq.di.dwf.FDwfAnalogOutPhaseInfo_nv(hdwf, idxChannel, pdegreeMin, pdegreeMax);
        end

        function [status] = FDwfAnalogOutPhaseSet(hdwf, idxChannel, degreePhase)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutPhaseSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutPhaseSet', 'idxChannel', 2);
            validateattributes(degreePhase, {'double'}, {'scalar'}, 'FDwfAnalogOutPhaseSet', 'degreePhase', 3);
            [status]= daq.di.dwf.FDwfAnalogOutPhaseSet_nv(hdwf, idxChannel, degreePhase);
        end

        function [status, pdegreePhase] = FDwfAnalogOutPhaseGet(hdwf, idxChannel, pdegreePhase)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutPhaseGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutPhaseGet', 'idxChannel', 2);
            validateattributes(pdegreePhase, {'double'}, {'vector'}, 'FDwfAnalogOutPhaseGet', 'pdegreePhase', 3);
            [status, pdegreePhase]= daq.di.dwf.FDwfAnalogOutPhaseGet_nv(hdwf, idxChannel, pdegreePhase);
        end

        function [status, pnSamplesMin, pnSamplesMax] = FDwfAnalogOutDataInfo(hdwf, idxChannel, pnSamplesMin, pnSamplesMax)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutDataInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutDataInfo', 'idxChannel', 2);
            validateattributes(pnSamplesMin, {'int32'}, {'vector'}, 'FDwfAnalogOutDataInfo', 'pnSamplesMin', 3);
            validateattributes(pnSamplesMax, {'int32'}, {'vector'}, 'FDwfAnalogOutDataInfo', 'pnSamplesMax', 4);
            [status, pnSamplesMin, pnSamplesMax]= daq.di.dwf.FDwfAnalogOutDataInfo_nv(hdwf, idxChannel, pnSamplesMin, pnSamplesMax);
        end

        function [status, rgdData] = FDwfAnalogOutDataSet(hdwf, idxChannel, rgdData, cdData)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutDataSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutDataSet', 'idxChannel', 2);
            validateattributes(rgdData, {'double'}, {'vector'}, 'FDwfAnalogOutDataSet', 'rgdData', 3);
            validateattributes(cdData, {'int32'}, {'scalar'}, 'FDwfAnalogOutDataSet', 'cdData', 4);
            [status, rgdData]= daq.di.dwf.FDwfAnalogOutDataSet_nv(hdwf, idxChannel, rgdData, cdData);
        end

        function [status, cdDataFree, cdDataLost, cdDataCorrupted] = FDwfAnalogOutPlayStatus(hdwf, idxChannel, cdDataFree, cdDataLost, cdDataCorrupted)
            error(nargchk(5, 5, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutPlayStatus', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutPlayStatus', 'idxChannel', 2);
            validateattributes(cdDataFree, {'int32'}, {'vector'}, 'FDwfAnalogOutPlayStatus', 'cdDataFree', 3);
            validateattributes(cdDataLost, {'int32'}, {'vector'}, 'FDwfAnalogOutPlayStatus', 'cdDataLost', 4);
            validateattributes(cdDataCorrupted, {'int32'}, {'vector'}, 'FDwfAnalogOutPlayStatus', 'cdDataCorrupted', 5);
            [status, cdDataFree, cdDataLost, cdDataCorrupted]= daq.di.dwf.FDwfAnalogOutPlayStatus_nv(hdwf, idxChannel, cdDataFree, cdDataLost, cdDataCorrupted);
        end

        function [status, rgdData] = FDwfAnalogOutPlayData(hdwf, idxChannel, rgdData, cdData)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutPlayData', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutPlayData', 'idxChannel', 2);
            validateattributes(rgdData, {'double'}, {'vector'}, 'FDwfAnalogOutPlayData', 'rgdData', 3);
            validateattributes(cdData, {'int32'}, {'scalar'}, 'FDwfAnalogOutPlayData', 'cdData', 4);
            [status, rgdData]= daq.di.dwf.FDwfAnalogOutPlayData_nv(hdwf, idxChannel, rgdData, cdData);
        end

        function [status] = FDwfAnalogOutReset(hdwf, idxChannel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutReset', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutReset', 'idxChannel', 2);
            [status]= daq.di.dwf.FDwfAnalogOutReset_nv(hdwf, idxChannel);
        end

        function [status] = FDwfAnalogOutConfigure(hdwf, idxChannel, fStart)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutConfigure', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutConfigure', 'idxChannel', 2);
            validateattributes(fStart, {'int32'}, {'scalar'}, 'FDwfAnalogOutConfigure', 'fStart', 3);
            [status]= daq.di.dwf.FDwfAnalogOutConfigure_nv(hdwf, idxChannel, fStart);
        end

        function [status, psts] = FDwfAnalogOutStatus(hdwf, idxChannel, psts)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogOutStatus', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogOutStatus', 'idxChannel', 2);
            validateattributes(psts, {'char'}, {'vector'}, 'FDwfAnalogOutStatus', 'psts', 3);
            [status, psts]= daq.di.dwf.FDwfAnalogOutStatus_nv(hdwf, idxChannel, psts);
        end

        function [status] = FDwfAnalogIOReset(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOReset', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfAnalogIOReset_nv(hdwf);
        end

        function [status] = FDwfAnalogIOConfigure(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOConfigure', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfAnalogIOConfigure_nv(hdwf);
        end

        function [status] = FDwfAnalogIOStatus(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOStatus', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfAnalogIOStatus_nv(hdwf);
        end

        function [status, pfSet, pfStatus] = FDwfAnalogIOEnableInfo(hdwf, pfSet, pfStatus)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOEnableInfo', 'hdwf', 1);
            validateattributes(pfSet, {'int32'}, {'vector'}, 'FDwfAnalogIOEnableInfo', 'pfSet', 2);
            validateattributes(pfStatus, {'int32'}, {'vector'}, 'FDwfAnalogIOEnableInfo', 'pfStatus', 3);
            [status, pfSet, pfStatus]= daq.di.dwf.FDwfAnalogIOEnableInfo_nv(hdwf, pfSet, pfStatus);
        end

        function [status] = FDwfAnalogIOEnableSet(hdwf, fMasterEnable)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOEnableSet', 'hdwf', 1);
            validateattributes(fMasterEnable, {'int32'}, {'scalar'}, 'FDwfAnalogIOEnableSet', 'fMasterEnable', 2);
            [status]= daq.di.dwf.FDwfAnalogIOEnableSet_nv(hdwf, fMasterEnable);
        end

        function [status, pfMasterEnable] = FDwfAnalogIOEnableGet(hdwf, pfMasterEnable)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOEnableGet', 'hdwf', 1);
            validateattributes(pfMasterEnable, {'int32'}, {'vector'}, 'FDwfAnalogIOEnableGet', 'pfMasterEnable', 2);
            [status, pfMasterEnable]= daq.di.dwf.FDwfAnalogIOEnableGet_nv(hdwf, pfMasterEnable);
        end

        function [status, pfMasterEnable] = FDwfAnalogIOEnableStatus(hdwf, pfMasterEnable)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOEnableStatus', 'hdwf', 1);
            validateattributes(pfMasterEnable, {'int32'}, {'vector'}, 'FDwfAnalogIOEnableStatus', 'pfMasterEnable', 2);
            [status, pfMasterEnable]= daq.di.dwf.FDwfAnalogIOEnableStatus_nv(hdwf, pfMasterEnable);
        end

        function [status, pnChannel] = FDwfAnalogIOChannelCount(hdwf, pnChannel)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelCount', 'hdwf', 1);
            validateattributes(pnChannel, {'int32'}, {'vector'}, 'FDwfAnalogIOChannelCount', 'pnChannel', 2);
            [status, pnChannel]= daq.di.dwf.FDwfAnalogIOChannelCount_nv(hdwf, pnChannel);
        end

        function [status, szName, szLabel] = FDwfAnalogIOChannelName(hdwf, idxChannel, szName, szLabel)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelName', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelName', 'idxChannel', 2);
            validateattributes(szName, {'char'}, {'vector'}, 'FDwfAnalogIOChannelName', 'szName', 3);
            validateattributes(szLabel, {'char'}, {'vector'}, 'FDwfAnalogIOChannelName', 'szLabel', 4);
            [status, szName, szLabel]= daq.di.dwf.FDwfAnalogIOChannelName_nv(hdwf, idxChannel, szName, szLabel);
        end

        function [status, pnNodes] = FDwfAnalogIOChannelInfo(hdwf, idxChannel, pnNodes)
            error(nargchk(3, 3, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelInfo', 'idxChannel', 2);
            validateattributes(pnNodes, {'int32'}, {'vector'}, 'FDwfAnalogIOChannelInfo', 'pnNodes', 3);
            [status, pnNodes]= daq.di.dwf.FDwfAnalogIOChannelInfo_nv(hdwf, idxChannel, pnNodes);
        end

        function [status, szNodeName, szNodeUnits] = FDwfAnalogIOChannelNodeName(hdwf, idxChannel, idxNode, szNodeName, szNodeUnits)
            error(nargchk(5, 5, nargin, 'struct'));
            error(nargoutchk(3, 3, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeName', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeName', 'idxChannel', 2);
            validateattributes(idxNode, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeName', 'idxNode', 3);
            validateattributes(szNodeName, {'char'}, {'vector'}, 'FDwfAnalogIOChannelNodeName', 'szNodeName', 4);
            validateattributes(szNodeUnits, {'char'}, {'vector'}, 'FDwfAnalogIOChannelNodeName', 'szNodeUnits', 5);
            [status, szNodeName, szNodeUnits]= daq.di.dwf.FDwfAnalogIOChannelNodeName_nv(hdwf, idxChannel, idxNode, szNodeName, szNodeUnits);
        end

        function [status, panalogio] = FDwfAnalogIOChannelNodeInfo(hdwf, idxChannel, idxNode, panalogio)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeInfo', 'idxChannel', 2);
            validateattributes(idxNode, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeInfo', 'idxNode', 3);
            validateattributes(panalogio, {'uint8'}, {'vector'}, 'FDwfAnalogIOChannelNodeInfo', 'panalogio', 4);
            [status, panalogio]= daq.di.dwf.FDwfAnalogIOChannelNodeInfo_nv(hdwf, idxChannel, idxNode, panalogio);
        end

        function [status, pmin, pmax, pnSteps] = FDwfAnalogIOChannelNodeSetInfo(hdwf, idxChannel, idxNode, pmin, pmax, pnSteps)
            error(nargchk(6, 6, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeSetInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeSetInfo', 'idxChannel', 2);
            validateattributes(idxNode, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeSetInfo', 'idxNode', 3);
            validateattributes(pmin, {'double'}, {'vector'}, 'FDwfAnalogIOChannelNodeSetInfo', 'pmin', 4);
            validateattributes(pmax, {'double'}, {'vector'}, 'FDwfAnalogIOChannelNodeSetInfo', 'pmax', 5);
            validateattributes(pnSteps, {'int32'}, {'vector'}, 'FDwfAnalogIOChannelNodeSetInfo', 'pnSteps', 6);
            [status, pmin, pmax, pnSteps]= daq.di.dwf.FDwfAnalogIOChannelNodeSetInfo_nv(hdwf, idxChannel, idxNode, pmin, pmax, pnSteps);
        end

        function [status] = FDwfAnalogIOChannelNodeSet(hdwf, idxChannel, idxNode, value)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeSet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeSet', 'idxChannel', 2);
            validateattributes(idxNode, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeSet', 'idxNode', 3);
            validateattributes(value, {'double'}, {'scalar'}, 'FDwfAnalogIOChannelNodeSet', 'value', 4);
            [status]= daq.di.dwf.FDwfAnalogIOChannelNodeSet_nv(hdwf, idxChannel, idxNode, value);
        end

        function [status, pvalue] = FDwfAnalogIOChannelNodeGet(hdwf, idxChannel, idxNode, pvalue)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeGet', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeGet', 'idxChannel', 2);
            validateattributes(idxNode, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeGet', 'idxNode', 3);
            validateattributes(pvalue, {'double'}, {'vector'}, 'FDwfAnalogIOChannelNodeGet', 'pvalue', 4);
            [status, pvalue]= daq.di.dwf.FDwfAnalogIOChannelNodeGet_nv(hdwf, idxChannel, idxNode, pvalue);
        end

        function [status, pmin, pmax, pnSteps] = FDwfAnalogIOChannelNodeStatusInfo(hdwf, idxChannel, idxNode, pmin, pmax, pnSteps)
            error(nargchk(6, 6, nargin, 'struct'));
            error(nargoutchk(4, 4, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeStatusInfo', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeStatusInfo', 'idxChannel', 2);
            validateattributes(idxNode, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeStatusInfo', 'idxNode', 3);
            validateattributes(pmin, {'double'}, {'vector'}, 'FDwfAnalogIOChannelNodeStatusInfo', 'pmin', 4);
            validateattributes(pmax, {'double'}, {'vector'}, 'FDwfAnalogIOChannelNodeStatusInfo', 'pmax', 5);
            validateattributes(pnSteps, {'int32'}, {'vector'}, 'FDwfAnalogIOChannelNodeStatusInfo', 'pnSteps', 6);
            [status, pmin, pmax, pnSteps]= daq.di.dwf.FDwfAnalogIOChannelNodeStatusInfo_nv(hdwf, idxChannel, idxNode, pmin, pmax, pnSteps);
        end

        function [status, pvalue] = FDwfAnalogIOChannelNodeStatus(hdwf, idxChannel, idxNode, pvalue)
            error(nargchk(4, 4, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeStatus', 'hdwf', 1);
            validateattributes(idxChannel, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeStatus', 'idxChannel', 2);
            validateattributes(idxNode, {'int32'}, {'scalar'}, 'FDwfAnalogIOChannelNodeStatus', 'idxNode', 3);
            validateattributes(pvalue, {'double'}, {'vector'}, 'FDwfAnalogIOChannelNodeStatus', 'pvalue', 4);
            [status, pvalue]= daq.di.dwf.FDwfAnalogIOChannelNodeStatus_nv(hdwf, idxChannel, idxNode, pvalue);
        end

        function [status] = FDwfDigitalIOReset(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOReset', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfDigitalIOReset_nv(hdwf);
        end

        function [status] = FDwfDigitalIOConfigure(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOConfigure', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfDigitalIOConfigure_nv(hdwf);
        end

        function [status] = FDwfDigitalIOStatus(hdwf)
            error(nargchk(1, 1, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOStatus', 'hdwf', 1);
            [status]= daq.di.dwf.FDwfDigitalIOStatus_nv(hdwf);
        end

        function [status, pfsOutputEnableMask] = FDwfDigitalIOOutputEnableInfo(hdwf, pfsOutputEnableMask)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOOutputEnableInfo', 'hdwf', 1);
            validateattributes(pfsOutputEnableMask, {'uint32'}, {'vector'}, 'FDwfDigitalIOOutputEnableInfo', 'pfsOutputEnableMask', 2);
            [status, pfsOutputEnableMask]= daq.di.dwf.FDwfDigitalIOOutputEnableInfo_nv(hdwf, pfsOutputEnableMask);
        end

        function [status] = FDwfDigitalIOOutputEnableSet(hdwf, fsOutputEnable)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOOutputEnableSet', 'hdwf', 1);
            validateattributes(fsOutputEnable, {'uint32'}, {'scalar'}, 'FDwfDigitalIOOutputEnableSet', 'fsOutputEnable', 2);
            [status]= daq.di.dwf.FDwfDigitalIOOutputEnableSet_nv(hdwf, fsOutputEnable);
        end

        function [status, pfsOutputEnable] = FDwfDigitalIOOutputEnableGet(hdwf, pfsOutputEnable)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOOutputEnableGet', 'hdwf', 1);
            validateattributes(pfsOutputEnable, {'uint32'}, {'vector'}, 'FDwfDigitalIOOutputEnableGet', 'pfsOutputEnable', 2);
            [status, pfsOutputEnable]= daq.di.dwf.FDwfDigitalIOOutputEnableGet_nv(hdwf, pfsOutputEnable);
        end

        function [status, pfsOutputMask] = FDwfDigitalIOOutputInfo(hdwf, pfsOutputMask)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOOutputInfo', 'hdwf', 1);
            validateattributes(pfsOutputMask, {'uint32'}, {'vector'}, 'FDwfDigitalIOOutputInfo', 'pfsOutputMask', 2);
            [status, pfsOutputMask]= daq.di.dwf.FDwfDigitalIOOutputInfo_nv(hdwf, pfsOutputMask);
        end

        function [status] = FDwfDigitalIOOutputSet(hdwf, fsOutput)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(1, 1, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOOutputSet', 'hdwf', 1);
            validateattributes(fsOutput, {'uint32'}, {'scalar'}, 'FDwfDigitalIOOutputSet', 'fsOutput', 2);
            [status]= daq.di.dwf.FDwfDigitalIOOutputSet_nv(hdwf, fsOutput);
        end

        function [status, pfsOutput] = FDwfDigitalIOOutputGet(hdwf, pfsOutput)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOOutputGet', 'hdwf', 1);
            validateattributes(pfsOutput, {'uint32'}, {'vector'}, 'FDwfDigitalIOOutputGet', 'pfsOutput', 2);
            [status, pfsOutput]= daq.di.dwf.FDwfDigitalIOOutputGet_nv(hdwf, pfsOutput);
        end

        function [status, pfsInputMask] = FDwfDigitalIOInputInfo(hdwf, pfsInputMask)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOInputInfo', 'hdwf', 1);
            validateattributes(pfsInputMask, {'uint32'}, {'vector'}, 'FDwfDigitalIOInputInfo', 'pfsInputMask', 2);
            [status, pfsInputMask]= daq.di.dwf.FDwfDigitalIOInputInfo_nv(hdwf, pfsInputMask);
        end

        function [status, pfsInput] = FDwfDigitalIOInputStatus(hdwf, pfsInput)
            error(nargchk(2, 2, nargin, 'struct'));
            error(nargoutchk(2, 2, nargout, 'struct'));
            validateattributes(hdwf, {'int32'}, {'scalar'}, 'FDwfDigitalIOInputStatus', 'hdwf', 1);
            validateattributes(pfsInput, {'uint32'}, {'vector'}, 'FDwfDigitalIOInputStatus', 'pfsInput', 2);
            [status, pfsInput]= daq.di.dwf.FDwfDigitalIOInputStatus_nv(hdwf, pfsInput);
        end

    end
end
